{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockingPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_lockingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_poolSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ownerDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ownerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "setRewardRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sinceBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "untilBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "untilLockingEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/stakingRewards.sol"
  },
  "ast": {
    "absolutePath": "contracts/stakingRewards.sol",
    "exportedSymbols": {
      "ERC20": [
        814
      ],
      "StakingRewards": [
        752
      ]
    },
    "id": 815,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:21:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StakingRewards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 752,
        "linearizedBaseContracts": [
          752
        ],
        "name": "StakingRewards",
        "nameLocation": "66:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "72f702f3",
            "id": 4,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "100:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "87:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$814",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 814,
                "src": "87:5:0"
              },
              "referencedDeclaration": 814,
              "src": "87:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$814",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ade70abc",
            "id": 6,
            "mutability": "mutable",
            "name": "_poolSize",
            "nameLocation": "132:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "120:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "120:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "13a59eb9",
            "id": 8,
            "mutability": "mutable",
            "name": "_lockingPeriod",
            "nameLocation": "181:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "169:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "169:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b7afe2e",
            "id": 10,
            "mutability": "mutable",
            "name": "contractBalance",
            "nameLocation": "285:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "273:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "273:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "387:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "371:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "StakingRewards.Stake",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "430:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "422:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "422:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "449:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "444:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "444:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "sinceBlock",
                "nameLocation": "470:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "465:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "465:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "untilBlock",
                "nameLocation": "515:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "510:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "510:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "558:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "553:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "406:5:0",
            "nodeType": "StructDefinition",
            "scope": 752,
            "src": "399:177:0",
            "visibility": "public"
          },
          {
            "canonicalName": "StakingRewards.Reward",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "610:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "605:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "605:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "start",
                "nameLocation": "653:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "648:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "648:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "end",
                "nameLocation": "699:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "694:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Reward",
            "nameLocation": "589:6:0",
            "nodeType": "StructDefinition",
            "scope": 752,
            "src": "582:151:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5a44f86",
            "id": 34,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "754:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "739:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
              "typeString": "struct StakingRewards.Stake[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "739:5:0"
                },
                "referencedDeclaration": 23,
                "src": "739:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$23_storage_ptr",
                  "typeString": "struct StakingRewards.Stake"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "739:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage_ptr",
                "typeString": "struct StakingRewards.Stake[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f301af42",
            "id": 38,
            "mutability": "mutable",
            "name": "rewards",
            "nameLocation": "782:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 752,
            "src": "766:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
              "typeString": "struct StakingRewards.Reward[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35,
                  "name": "Reward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "766:6:0"
                },
                "referencedDeclaration": 30,
                "src": "766:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Reward_$30_storage_ptr",
                  "typeString": "struct StakingRewards.Reward"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "766:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage_ptr",
                "typeString": "struct StakingRewards.Reward[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "855:224:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "865:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$814",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "886:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "880:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$814_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$814",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "865:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$814",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "865:35:0"
                },
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "910:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "918:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "918:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "910:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "910:18:0"
                },
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "_lockingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "938:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "lockingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "955:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "938:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "938:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "313030",
                                "id": 66,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1003:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "998:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 64,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "998:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "998:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 70,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1014:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1014:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1009:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 68,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1009:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1009:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1037:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1032:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1032:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1032:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 63,
                          "name": "Reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "991:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Reward_$30_storage_ptr_$",
                            "typeString": "type(struct StakingRewards.Reward storage pointer)"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "991:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reward_$30_memory_ptr",
                          "typeString": "struct StakingRewards.Reward memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Reward_$30_memory_ptr",
                          "typeString": "struct StakingRewards.Reward memory"
                        }
                      ],
                      "expression": {
                        "id": 60,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "978:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Reward_$30_storage_$dyn_storage_ptr_$_t_struct$_Reward_$30_storage_$returns$__$bound_to$_t_array$_t_struct$_Reward_$30_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct StakingRewards.Reward storage ref[] storage pointer,struct StakingRewards.Reward storage ref)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "978:63:0"
                }
              ]
            },
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "820:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "812:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "lockingPeriod",
                  "nameLocation": "840:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "835:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:43:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:0"
            },
            "scope": 752,
            "src": "800:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1106:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1122:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1122:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1136:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1122:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1114:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:28:0"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1150:1:0"
                }
              ]
            },
            "id": 92,
            "name": "_ownerOnly",
            "nameLocation": "1094:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:0"
            },
            "src": "1085:73:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1310:114:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1346:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1346:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1366:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$752",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$752",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1358:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1358:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 108,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1373:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1320:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$814",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 797,
                      "src": "1320:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:61:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1391:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1410:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1391:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:26:0"
                }
              ]
            },
            "functionSelector": "141833dc",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 97,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 96,
                  "name": "_ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "1300:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1300:10:0"
              }
            ],
            "name": "ownerDeposit",
            "nameLocation": "1264:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1282:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1277:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:14:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1310:0:0"
            },
            "scope": 752,
            "src": "1255:169:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1531:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1563:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1563:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 128,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1575:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 123,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1541:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$814",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "1541:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:42:0"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1593:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "1612:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1593:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:26:0"
                }
              ]
            },
            "functionSelector": "33f707d1",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 121,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120,
                  "name": "_ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "1521:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1521:10:0"
              }
            ],
            "name": "ownerWithdraw",
            "nameLocation": "1484:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1503:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1498:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:14:0"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1531:0:0"
            },
            "scope": 752,
            "src": "1475:151:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1729:487:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 144,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1747:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1757:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1747:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f207374616b65",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1760:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3268e7c2a8e94d5c2f8b0f5539b60eec082ea23ace501c30fabdc5f5f9dbfc4f",
                          "typeString": "literal_string \"Nothing to stake\""
                        },
                        "value": "Nothing to stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3268e7c2a8e94d5c2f8b0f5539b60eec082ea23ace501c30fabdc5f5f9dbfc4f",
                          "typeString": "literal_string \"Nothing to stake\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1739:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:40:0"
                },
                {
                  "assignments": [
                    151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "mutability": "mutable",
                      "name": "isTransfered",
                      "nameLocation": "1828:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1823:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1823:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1869:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1869:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 158,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1889:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$752",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$752",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1881:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1881:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1881:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 160,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "1896:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 152,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1843:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$814",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 797,
                      "src": "1843:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1823:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 164,
                          "name": "isTransfered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "1923:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1939:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1923:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72207768696c65207472616e73666572",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae2228f72ee88a374b5838b3f0263497979bb2224152d3425744c7feb6e2b1c3",
                          "typeString": "literal_string \"Error while transfer\""
                        },
                        "value": "Error while transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae2228f72ee88a374b5838b3f0263497979bb2224152d3425744c7feb6e2b1c3",
                          "typeString": "literal_string \"Error while transfer\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:53:0"
                },
                {
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "_poolSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "2026:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 171,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2039:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2026:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:20:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2074:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2074:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 180,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2086:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 183,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2100:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2100:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2095:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 181,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2095:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2095:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 188,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2123:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2123:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 190,
                                  "name": "_lockingPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "2141:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2123:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2118:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 186,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2118:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2118:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2159:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 177,
                          "name": "Stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2068:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Stake_$23_storage_ptr_$",
                            "typeString": "type(struct StakingRewards.Stake storage pointer)"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2068:93:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_memory_ptr",
                          "typeString": "struct StakingRewards.Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$23_memory_ptr",
                          "typeString": "struct StakingRewards.Stake memory"
                        }
                      ],
                      "expression": {
                        "id": 174,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2056:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2056:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$23_storage_$dyn_storage_ptr_$_t_struct$_Stake_$23_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$23_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct StakingRewards.Stake storage ref[] storage pointer,struct StakingRewards.Stake storage ref)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:106:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 197,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2179:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                        "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2179:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "2172:20:0"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1686:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1697:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1692:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:14:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1723:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:6:0"
            },
            "scope": 752,
            "src": "1677:539:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2298:1024:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 207,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2316:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "id": 208,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2323:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2316:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2316:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 211,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2336:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2336:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2316:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420796f7572207374616b65",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2348:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a8a8388aac66642762ef55bb28115ec61fdaf0c465f7f89fe2640734d5cf982",
                          "typeString": "literal_string \"Not your stake\""
                        },
                        "value": "Not your stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a8a8388aac66642762ef55bb28115ec61fdaf0c465f7f89fe2640734d5cf982",
                          "typeString": "literal_string \"Not your stake\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2308:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 218,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2409:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 220,
                            "indexExpression": {
                              "id": 219,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2416:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2409:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "untilBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2409:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 224,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2439:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2439:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2434:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2434:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2434:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2409:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206561726c79",
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                          "typeString": "literal_string \"Too early\""
                        },
                        "value": "Too early"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                          "typeString": "literal_string \"Too early\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2401:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2401:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 232,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2521:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 234,
                            "indexExpression": {
                              "id": 233,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2528:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2521:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "2521:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2542:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2521:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f20756e7374616b65",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2545:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9b7bc8e04a7bef6bec8b9d8ce211c79f13b16fd8e577f3f5d176f76c14c521f",
                          "typeString": "literal_string \"Nothing to unstake\""
                        },
                        "value": "Nothing to unstake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9b7bc8e04a7bef6bec8b9d8ce211c79f13b16fd8e577f3f5d176f76c14c521f",
                          "typeString": "literal_string \"Nothing to unstake\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2513:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 242,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2601:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 241,
                      "name": "calculateReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "2585:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:20:0"
                },
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2653:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 312,
                      "src": "2648:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2648:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 247,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2648:12:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 248,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2674:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 249,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "id": 250,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2699:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2692:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "2692:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2674:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "2878:273:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 262,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "2892:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 263,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "2902:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                    "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                  }
                                },
                                "id": 265,
                                "indexExpression": {
                                  "id": 264,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2909:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2902:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$23_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref"
                                }
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "2902:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 267,
                                  "name": "stakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "2923:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                    "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                  }
                                },
                                "id": 269,
                                "indexExpression": {
                                  "id": 268,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2930:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2923:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$23_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reward",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "2923:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2902:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2892:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 273,
                        "nodeType": "ExpressionStatement",
                        "src": "2892:49:0"
                      },
                      {
                        "expression": {
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 274,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2989:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 275,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "3008:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 277,
                              "indexExpression": {
                                "id": 276,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "3015:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3008:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$23_storage",
                                "typeString": "struct StakingRewards.Stake storage ref"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "3008:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2989:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "2989:37:0"
                      },
                      {
                        "expression": {
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "3098:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "3105:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3098:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$23_storage",
                                "typeString": "struct StakingRewards.Stake storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "3098:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3118:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3098:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:21:0"
                      }
                    ]
                  },
                  "id": 289,
                  "nodeType": "IfStatement",
                  "src": "2671:480:0",
                  "trueBody": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2711:153:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 254,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "2825:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 255,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2835:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "id": 256,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "2842:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2835:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$23_storage",
                                "typeString": "struct StakingRewards.Stake storage ref"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "2835:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2825:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "2825:28:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "_poolSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "3161:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 291,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3173:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "id": 292,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "3180:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3173:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3173:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3161:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:30:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 297,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3202:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 299,
                        "indexExpression": {
                          "id": 298,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "3209:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3202:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3202:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3222:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3202:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3255:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3255:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 309,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "3267:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 304,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "3233:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$814",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "3233:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:42:0"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "2269:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2283:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2278:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2277:10:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2298:0:0"
            },
            "scope": 752,
            "src": "2260:1062:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3368:632:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 319,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3387:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 321,
                            "indexExpression": {
                              "id": 320,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3394:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3387:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3387:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3407:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3407:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3387:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420796f757220726577617264",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a25a2b8fb9948ab00abe86586daa38f2db9ba19c269586b7ef0616001c87eeeb",
                          "typeString": "literal_string \"Not your reward\""
                        },
                        "value": "Not your reward"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a25a2b8fb9948ab00abe86586daa38f2db9ba19c269586b7ef0616001c87eeeb",
                          "typeString": "literal_string \"Not your reward\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3379:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 330,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3456:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "id": 331,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3463:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3456:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "untilBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3456:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 336,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3486:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3486:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3481:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 334,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3481:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3481:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3456:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206561726c79",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3504:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                          "typeString": "literal_string \"Too early\""
                        },
                        "value": "Too early"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                          "typeString": "literal_string \"Too early\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3448:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 344,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3535:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 346,
                            "indexExpression": {
                              "id": 345,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3542:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3535:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "3535:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 348,
                          "name": "contractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3557:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3535:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f207061796f7574",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3574:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84d26e8eba76b549ce029b58190d3a5dcaf5adf121d558058ee19a744947d89c",
                          "typeString": "literal_string \"Not enough funds to payout\""
                        },
                        "value": "Not enough funds to payout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84d26e8eba76b549ce029b58190d3a5dcaf5adf121d558058ee19a744947d89c",
                          "typeString": "literal_string \"Not enough funds to payout\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3527:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "3527:77:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 354,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3623:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 356,
                            "indexExpression": {
                              "id": 355,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3630:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3623:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "3623:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3644:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3623:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f207061796f7574",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3647:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cee5457b86c6b22c079c187167da81684c9d1b62b8a95e1e78016c1d56680fe5",
                          "typeString": "literal_string \"Nothing to payout\""
                        },
                        "value": "Nothing to payout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cee5457b86c6b22c079c187167da81684c9d1b62b8a95e1e78016c1d56680fe5",
                          "typeString": "literal_string \"Nothing to payout\""
                        }
                      ],
                      "id": 353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3615:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3615:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3615:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 364,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3687:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 366,
                            "indexExpression": {
                              "id": 365,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3694:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3687:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                              "typeString": "struct StakingRewards.Stake storage ref"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "3687:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3709:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3687:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736520756e7374616b65",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3712:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b631b13fb9439c0e0996ecb26af129f44af732432dc207fda545948fbb190ca",
                          "typeString": "literal_string \"Use unstake\""
                        },
                        "value": "Use unstake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b631b13fb9439c0e0996ecb26af129f44af732432dc207fda545948fbb190ca",
                          "typeString": "literal_string \"Use unstake\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3679:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:48:0"
                },
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "3754:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3749:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 373,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3749:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 375,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "3763:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "id": 376,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "3770:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3763:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$23_storage",
                        "typeString": "struct StakingRewards.Stake storage ref"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "reward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "3763:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3749:32:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 380,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3792:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 382,
                        "indexExpression": {
                          "id": 381,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "3799:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3792:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "3792:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3813:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3792:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3864:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3864:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 392,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "3876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 387,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "3842:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$814",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "3842:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:43:0"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 395,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3918:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 396,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3937:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3918:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:26:0"
                }
              ]
            },
            "functionSelector": "ae169a50",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "3337:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3354:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "3349:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3348:10:0"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3368:0:0"
            },
            "scope": 752,
            "src": "3328:672:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 674,
              "nodeType": "Block",
              "src": "4114:1730:0",
              "statements": [
                {
                  "expression": {
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 405,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "4124:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 407,
                        "indexExpression": {
                          "id": 406,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4131:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4124:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "4124:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4145:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4124:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:22:0"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "4210:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 674,
                      "src": "4205:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4205:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4205:8:0"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "divisor",
                      "nameLocation": "4228:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 674,
                      "src": "4223:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4223:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "hexValue": "3331353336303030303030",
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4238:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_31536000000_by_1",
                      "typeString": "int_const 31536000000"
                    },
                    "value": "31536000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4223:26:0"
                },
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 419,
                      "name": "end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "4308:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 420,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "4314:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 422,
                        "indexExpression": {
                          "id": 421,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "4321:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4314:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "untilBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4314:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4308:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "4308:28:0"
                },
                {
                  "body": {
                    "id": 672,
                    "nodeType": "Block",
                    "src": "4393:1443:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 437,
                                      "name": "rewards",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4426:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                        "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                      }
                                    },
                                    "id": 439,
                                    "indexExpression": {
                                      "id": 438,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 427,
                                      "src": "4434:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4426:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Reward_$30_storage",
                                      "typeString": "struct StakingRewards.Reward storage ref"
                                    }
                                  },
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "start",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27,
                                  "src": "4426:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 441,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "4446:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                        "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                      }
                                    },
                                    "id": 443,
                                    "indexExpression": {
                                      "id": 442,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 402,
                                      "src": "4453:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4446:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$23_storage",
                                      "typeString": "struct StakingRewards.Stake storage ref"
                                    }
                                  },
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sinceBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18,
                                  "src": "4446:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4426:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 446,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4425:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 447,
                                      "name": "rewards",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4475:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                        "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                      }
                                    },
                                    "id": 449,
                                    "indexExpression": {
                                      "id": 448,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 427,
                                      "src": "4483:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4475:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Reward_$30_storage",
                                      "typeString": "struct StakingRewards.Reward storage ref"
                                    }
                                  },
                                  "id": 450,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "end",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "4475:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4493:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4475:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4474:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4425:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 490,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 482,
                                          "name": "rewards",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "4706:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                          }
                                        },
                                        "id": 484,
                                        "indexExpression": {
                                          "id": 483,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 427,
                                          "src": "4714:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4706:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Reward_$30_storage",
                                          "typeString": "struct StakingRewards.Reward storage ref"
                                        }
                                      },
                                      "id": 485,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "start",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27,
                                      "src": "4706:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 486,
                                          "name": "stakes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34,
                                          "src": "4726:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                          }
                                        },
                                        "id": 488,
                                        "indexExpression": {
                                          "id": 487,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 402,
                                          "src": "4733:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4726:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                                          "typeString": "struct StakingRewards.Stake storage ref"
                                        }
                                      },
                                      "id": 489,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sinceBlock",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 18,
                                      "src": "4726:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4706:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 491,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4705:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 500,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 492,
                                          "name": "rewards",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "4754:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                          }
                                        },
                                        "id": 494,
                                        "indexExpression": {
                                          "id": 493,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 427,
                                          "src": "4762:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4754:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Reward_$30_storage",
                                          "typeString": "struct StakingRewards.Reward storage ref"
                                        }
                                      },
                                      "id": 495,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "end",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "4754:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 496,
                                          "name": "stakes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34,
                                          "src": "4772:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                          }
                                        },
                                        "id": 498,
                                        "indexExpression": {
                                          "id": 497,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 402,
                                          "src": "4779:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4772:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                                          "typeString": "struct StakingRewards.Stake storage ref"
                                        }
                                      },
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sinceBlock",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 18,
                                      "src": "4772:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4754:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 501,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4753:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4705:90:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 503,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "4800:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                        }
                                      },
                                      "id": 505,
                                      "indexExpression": {
                                        "id": 504,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 427,
                                        "src": "4808:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4800:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reward_$30_storage",
                                        "typeString": "struct StakingRewards.Reward storage ref"
                                      }
                                    },
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "end",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "4800:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4818:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4800:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4799:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4705:115:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 567,
                                            "name": "rewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "5298:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                            }
                                          },
                                          "id": 569,
                                          "indexExpression": {
                                            "id": 568,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 427,
                                            "src": "5306:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5298:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Reward_$30_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref"
                                          }
                                        },
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "start",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27,
                                        "src": "5298:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 571,
                                            "name": "stakes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34,
                                            "src": "5318:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                            }
                                          },
                                          "id": 573,
                                          "indexExpression": {
                                            "id": 572,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "5325:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5318:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stake_$23_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref"
                                          }
                                        },
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sinceBlock",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 18,
                                        "src": "5318:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5298:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 576,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5297:44:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 582,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 577,
                                            "name": "rewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "5346:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                            }
                                          },
                                          "id": 579,
                                          "indexExpression": {
                                            "id": 578,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 427,
                                            "src": "5354:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5346:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Reward_$30_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref"
                                          }
                                        },
                                        "id": 580,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "end",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 29,
                                        "src": "5346:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "id": 581,
                                        "name": "end",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 413,
                                        "src": "5364:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5346:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 583,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5345:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5297:71:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 585,
                                          "name": "rewards",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "5373:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                          }
                                        },
                                        "id": 587,
                                        "indexExpression": {
                                          "id": 586,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 427,
                                          "src": "5381:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5373:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Reward_$30_storage",
                                          "typeString": "struct StakingRewards.Reward storage ref"
                                        }
                                      },
                                      "id": 588,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "end",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "5373:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5391:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5373:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 591,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5372:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5297:96:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 623,
                                            "name": "rewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "5590:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                            }
                                          },
                                          "id": 625,
                                          "indexExpression": {
                                            "id": 624,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 427,
                                            "src": "5598:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5590:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Reward_$30_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref"
                                          }
                                        },
                                        "id": 626,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "start",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27,
                                        "src": "5590:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "id": 627,
                                        "name": "end",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 413,
                                        "src": "5610:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5590:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 629,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5589:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 638,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 630,
                                            "name": "rewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "5619:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                            }
                                          },
                                          "id": 632,
                                          "indexExpression": {
                                            "id": 631,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 427,
                                            "src": "5627:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5619:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Reward_$30_storage",
                                            "typeString": "struct StakingRewards.Reward storage ref"
                                          }
                                        },
                                        "id": 633,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "start",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27,
                                        "src": "5619:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 634,
                                            "name": "stakes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34,
                                            "src": "5639:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                            }
                                          },
                                          "id": 636,
                                          "indexExpression": {
                                            "id": 635,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "5646:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5639:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stake_$23_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref"
                                          }
                                        },
                                        "id": 637,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sinceBlock",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 18,
                                        "src": "5639:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5619:42:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 639,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5618:44:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5589:73:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 668,
                              "nodeType": "IfStatement",
                              "src": "5585:240:0",
                              "trueBody": {
                                "id": 667,
                                "nodeType": "Block",
                                "src": "5663:162:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 641,
                                            "name": "stakes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34,
                                            "src": "5681:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                              "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                            }
                                          },
                                          "id": 643,
                                          "indexExpression": {
                                            "id": 642,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 402,
                                            "src": "5688:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5681:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stake_$23_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref"
                                          }
                                        },
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "reward",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 22,
                                        "src": "5681:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 661,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 656,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 650,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 645,
                                                        "name": "end",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 413,
                                                        "src": "5705:3:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "-",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "baseExpression": {
                                                            "id": 646,
                                                            "name": "rewards",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 38,
                                                            "src": "5711:7:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                              "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                            }
                                                          },
                                                          "id": 648,
                                                          "indexExpression": {
                                                            "id": 647,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 427,
                                                            "src": "5719:1:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "5711:10:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                            "typeString": "struct StakingRewards.Reward storage ref"
                                                          }
                                                        },
                                                        "id": 649,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "start",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 27,
                                                        "src": "5711:16:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "5705:22:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 651,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "5704:24:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 652,
                                                      "name": "rewards",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 38,
                                                      "src": "5731:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                        "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                      }
                                                    },
                                                    "id": 654,
                                                    "indexExpression": {
                                                      "id": 653,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 427,
                                                      "src": "5739:1:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5731:10:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                      "typeString": "struct StakingRewards.Reward storage ref"
                                                    }
                                                  },
                                                  "id": 655,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "reward",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 25,
                                                  "src": "5731:17:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "5704:44:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 657,
                                                    "name": "stakes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 34,
                                                    "src": "5751:6:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                      "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 659,
                                                  "indexExpression": {
                                                    "id": 658,
                                                    "name": "_id",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 402,
                                                    "src": "5758:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "5751:11:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Stake_$23_storage",
                                                    "typeString": "struct StakingRewards.Stake storage ref"
                                                  }
                                                },
                                                "id": 660,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 16,
                                                "src": "5751:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5704:65:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 662,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5703:67:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 663,
                                          "name": "divisor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 416,
                                          "src": "5771:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5703:75:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5681:97:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 666,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5681:97:0"
                                  }
                                ]
                              }
                            },
                            "id": 669,
                            "nodeType": "IfStatement",
                            "src": "5293:532:0",
                            "trueBody": {
                              "id": 622,
                              "nodeType": "Block",
                              "src": "5396:170:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 593,
                                          "name": "stakes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34,
                                          "src": "5414:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                          }
                                        },
                                        "id": 595,
                                        "indexExpression": {
                                          "id": 594,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 402,
                                          "src": "5421:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5414:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                                          "typeString": "struct StakingRewards.Stake storage ref"
                                        }
                                      },
                                      "id": 596,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "reward",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "5414:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 619,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 616,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 611,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 605,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "id": 597,
                                                          "name": "rewards",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 38,
                                                          "src": "5438:7:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                            "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 599,
                                                        "indexExpression": {
                                                          "id": 598,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 427,
                                                          "src": "5446:1:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "5438:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                          "typeString": "struct StakingRewards.Reward storage ref"
                                                        }
                                                      },
                                                      "id": 600,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "end",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 29,
                                                      "src": "5438:14:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "id": 601,
                                                          "name": "rewards",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 38,
                                                          "src": "5455:7:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                            "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 603,
                                                        "indexExpression": {
                                                          "id": 602,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 427,
                                                          "src": "5463:1:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "5455:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                          "typeString": "struct StakingRewards.Reward storage ref"
                                                        }
                                                      },
                                                      "id": 604,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "start",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 27,
                                                      "src": "5455:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "5438:33:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 606,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "5437:35:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 607,
                                                    "name": "rewards",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 38,
                                                    "src": "5475:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                      "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 609,
                                                  "indexExpression": {
                                                    "id": 608,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 427,
                                                    "src": "5483:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "5475:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                    "typeString": "struct StakingRewards.Reward storage ref"
                                                  }
                                                },
                                                "id": 610,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "reward",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 25,
                                                "src": "5475:17:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5437:55:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 612,
                                                  "name": "stakes",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 34,
                                                  "src": "5495:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                    "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 614,
                                                "indexExpression": {
                                                  "id": 613,
                                                  "name": "_id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 402,
                                                  "src": "5502:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5495:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Stake_$23_storage",
                                                  "typeString": "struct StakingRewards.Stake storage ref"
                                                }
                                              },
                                              "id": 615,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "amount",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 16,
                                              "src": "5495:18:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5437:76:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 617,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5436:78:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 618,
                                        "name": "divisor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 416,
                                        "src": "5515:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5436:86:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5414:108:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 621,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5414:108:0"
                                }
                              ]
                            }
                          },
                          "id": 670,
                          "nodeType": "IfStatement",
                          "src": "4702:1123:0",
                          "trueBody": {
                            "id": 566,
                            "nodeType": "Block",
                            "src": "4821:453:0",
                            "statements": [
                              {
                                "assignments": [
                                  512
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 512,
                                    "mutability": "mutable",
                                    "name": "endOfBlock",
                                    "nameLocation": "4844:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 566,
                                    "src": "4839:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 511,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4839:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 513,
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4839:15:0"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 514,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "4892:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                        }
                                      },
                                      "id": 516,
                                      "indexExpression": {
                                        "id": 515,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 427,
                                        "src": "4900:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4892:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reward_$30_storage",
                                        "typeString": "struct StakingRewards.Reward storage ref"
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "end",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "4892:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 518,
                                        "name": "stakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34,
                                        "src": "4910:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                          "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                        }
                                      },
                                      "id": 520,
                                      "indexExpression": {
                                        "id": 519,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 402,
                                        "src": "4917:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4910:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stake_$23_storage",
                                        "typeString": "struct StakingRewards.Stake storage ref"
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "untilBlock",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20,
                                    "src": "4910:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4892:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 538,
                                  "nodeType": "Block",
                                  "src": "5030:68:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 536,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 531,
                                          "name": "endOfBlock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 512,
                                          "src": "5052:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 532,
                                              "name": "rewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 38,
                                              "src": "5065:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                              }
                                            },
                                            "id": 534,
                                            "indexExpression": {
                                              "id": 533,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 427,
                                              "src": "5073:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5065:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Reward_$30_storage",
                                              "typeString": "struct StakingRewards.Reward storage ref"
                                            }
                                          },
                                          "id": 535,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "end",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 29,
                                          "src": "5065:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5052:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 537,
                                      "nodeType": "ExpressionStatement",
                                      "src": "5052:27:0"
                                    }
                                  ]
                                },
                                "id": 539,
                                "nodeType": "IfStatement",
                                "src": "4889:209:0",
                                "trueBody": {
                                  "id": 530,
                                  "nodeType": "Block",
                                  "src": "4933:76:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 528,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 523,
                                          "name": "endOfBlock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 512,
                                          "src": "4955:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 524,
                                              "name": "stakes",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 34,
                                              "src": "4968:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                              }
                                            },
                                            "id": 526,
                                            "indexExpression": {
                                              "id": 525,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 402,
                                              "src": "4975:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4968:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                                              "typeString": "struct StakingRewards.Stake storage ref"
                                            }
                                          },
                                          "id": 527,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "untilBlock",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 20,
                                          "src": "4968:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4955:35:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 529,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4955:35:0"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "id": 564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 540,
                                        "name": "stakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34,
                                        "src": "5116:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                          "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                        }
                                      },
                                      "id": 542,
                                      "indexExpression": {
                                        "id": 541,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 402,
                                        "src": "5123:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5116:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stake_$23_storage",
                                        "typeString": "struct StakingRewards.Stake storage ref"
                                      }
                                    },
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "reward",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 22,
                                    "src": "5116:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 560,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 555,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 549,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 544,
                                                    "name": "endOfBlock",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 512,
                                                    "src": "5140:10:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 545,
                                                        "name": "stakes",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 34,
                                                        "src": "5153:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                          "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 547,
                                                      "indexExpression": {
                                                        "id": 546,
                                                        "name": "_id",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 402,
                                                        "src": "5160:3:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "5153:11:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Stake_$23_storage",
                                                        "typeString": "struct StakingRewards.Stake storage ref"
                                                      }
                                                    },
                                                    "id": 548,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sinceBlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 18,
                                                    "src": "5153:22:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "5140:35:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 550,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "5139:37:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 551,
                                                  "name": "rewards",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 38,
                                                  "src": "5179:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                    "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 553,
                                                "indexExpression": {
                                                  "id": 552,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 427,
                                                  "src": "5187:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5179:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                  "typeString": "struct StakingRewards.Reward storage ref"
                                                }
                                              },
                                              "id": 554,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "reward",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 25,
                                              "src": "5179:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5139:57:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 556,
                                                "name": "stakes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 34,
                                                "src": "5199:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                  "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                                }
                                              },
                                              "id": 558,
                                              "indexExpression": {
                                                "id": 557,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 402,
                                                "src": "5206:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5199:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Stake_$23_storage",
                                                "typeString": "struct StakingRewards.Stake storage ref"
                                              }
                                            },
                                            "id": 559,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 16,
                                            "src": "5199:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "5139:78:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 561,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5138:80:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 562,
                                      "name": "divisor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 416,
                                      "src": "5219:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5138:88:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5116:110:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 565,
                                "nodeType": "ExpressionStatement",
                                "src": "5116:110:0"
                              }
                            ]
                          }
                        },
                        "id": 671,
                        "nodeType": "IfStatement",
                        "src": "4421:1404:0",
                        "trueBody": {
                          "id": 481,
                          "nodeType": "Block",
                          "src": "4496:187:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 455,
                                      "name": "stakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "4514:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                        "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                      }
                                    },
                                    "id": 457,
                                    "indexExpression": {
                                      "id": 456,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 402,
                                      "src": "4521:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4514:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$23_storage",
                                      "typeString": "struct StakingRewards.Stake storage ref"
                                    }
                                  },
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "reward",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22,
                                  "src": "4514:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 470,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 464,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 459,
                                                  "name": "end",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 413,
                                                  "src": "4537:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "baseExpression": {
                                                      "id": 460,
                                                      "name": "stakes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 34,
                                                      "src": "4543:6:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                        "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                                      }
                                                    },
                                                    "id": 462,
                                                    "indexExpression": {
                                                      "id": 461,
                                                      "name": "_id",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 402,
                                                      "src": "4550:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4543:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Stake_$23_storage",
                                                      "typeString": "struct StakingRewards.Stake storage ref"
                                                    }
                                                  },
                                                  "id": 463,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "sinceBlock",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 18,
                                                  "src": "4543:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "4537:28:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 465,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "4536:30:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 466,
                                                "name": "rewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 38,
                                                "src": "4569:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                                  "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                                }
                                              },
                                              "id": 468,
                                              "indexExpression": {
                                                "id": 467,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 427,
                                                "src": "4577:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "4569:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Reward_$30_storage",
                                                "typeString": "struct StakingRewards.Reward storage ref"
                                              }
                                            },
                                            "id": 469,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "reward",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 25,
                                            "src": "4569:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4536:50:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 471,
                                              "name": "stakes",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 34,
                                              "src": "4589:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                                "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                              }
                                            },
                                            "id": 473,
                                            "indexExpression": {
                                              "id": 472,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 402,
                                              "src": "4596:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4589:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$23_storage",
                                              "typeString": "struct StakingRewards.Stake storage ref"
                                            }
                                          },
                                          "id": 474,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 16,
                                          "src": "4589:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4536:71:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 476,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4535:73:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 477,
                                    "name": "divisor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 416,
                                    "src": "4609:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4535:81:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4514:102:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 480,
                              "nodeType": "ExpressionStatement",
                              "src": "4514:102:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 430,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "4371:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 431,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "4373:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4373:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4371:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 673,
                  "initializationExpression": {
                    "assignments": [
                      427
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4366:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 673,
                        "src": "4361:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4361:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 429,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4368:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4361:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4389:3:0",
                      "subExpression": {
                        "id": 434,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4389:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 436,
                    "nodeType": "ExpressionStatement",
                    "src": "4389:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4356:1480:0"
                }
              ]
            },
            "id": 675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReward",
            "nameLocation": "4079:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4100:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "4095:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4094:10:0"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4114:0:0"
            },
            "scope": 752,
            "src": "4070:1774:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "5959:298:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 686,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5993:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 689,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6004:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6004:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5999:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 687,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "5999:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5999:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6027:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6022:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 692,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6022:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6022:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 685,
                          "name": "Reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "5986:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Reward_$30_storage_ptr_$",
                            "typeString": "type(struct StakingRewards.Reward storage pointer)"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5986:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reward_$30_memory_ptr",
                          "typeString": "struct StakingRewards.Reward memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Reward_$30_memory_ptr",
                          "typeString": "struct StakingRewards.Reward memory"
                        }
                      ],
                      "expression": {
                        "id": 682,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "5973:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5973:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Reward_$30_storage_$dyn_storage_ptr_$_t_struct$_Reward_$30_storage_$returns$__$bound_to$_t_array$_t_struct$_Reward_$30_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct StakingRewards.Reward storage ref[] storage pointer,struct StakingRewards.Reward storage ref)"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5973:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "5973:58:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 699,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "6093:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                          "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6093:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6108:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6093:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 718,
                  "nodeType": "IfStatement",
                  "src": "6090:152:0",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "6110:132:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 703,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "6124:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                  "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                }
                              },
                              "id": 708,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 704,
                                    "name": "rewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38,
                                    "src": "6132:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Reward_$30_storage_$dyn_storage",
                                      "typeString": "struct StakingRewards.Reward storage ref[] storage ref"
                                    }
                                  },
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "6132:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6148:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "6132:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6124:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reward_$30_storage",
                                "typeString": "struct StakingRewards.Reward storage ref"
                              }
                            },
                            "id": 709,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "end",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "6124:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 712,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6162:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6162:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6157:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 710,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6157:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6157:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6124:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "6124:54:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9e447fc6",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 679,
                  "name": "_ownerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "5948:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5948:10:0"
              }
            ],
            "name": "setRewardRate",
            "nameLocation": "5916:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "5935:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "5930:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5930:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5929:11:0"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:0:0"
            },
            "scope": 752,
            "src": "5907:350:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "6386:185:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 727,
                          "name": "stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "6399:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                            "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                          }
                        },
                        "id": 729,
                        "indexExpression": {
                          "id": 728,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "6406:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6399:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$23_storage",
                          "typeString": "struct StakingRewards.Stake storage ref"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "untilBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "6399:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 731,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6424:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6424:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6399:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 748,
                    "nodeType": "Block",
                    "src": "6486:79:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 737,
                                "name": "stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "6507:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$23_storage_$dyn_storage",
                                  "typeString": "struct StakingRewards.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 739,
                              "indexExpression": {
                                "id": 738,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "6514:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6507:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$23_storage",
                                "typeString": "struct StakingRewards.Stake storage ref"
                              }
                            },
                            "id": 740,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "untilBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "6507:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 743,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6537:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6537:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6532:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 741,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6532:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6532:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6507:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 726,
                        "id": 747,
                        "nodeType": "Return",
                        "src": "6500:53:0"
                      }
                    ]
                  },
                  "id": 749,
                  "nodeType": "IfStatement",
                  "src": "6396:169:0",
                  "trueBody": {
                    "id": 736,
                    "nodeType": "Block",
                    "src": "6440:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6461:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 726,
                        "id": 735,
                        "nodeType": "Return",
                        "src": "6454:8:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "484b4689",
            "id": 751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "untilLockingEnd",
            "nameLocation": "6334:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "6355:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "6350:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6350:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6349:10:0"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "6380:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6380:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6379:6:0"
            },
            "scope": 752,
            "src": "6325:246:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 815,
        "src": "57:6517:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 814,
        "linearizedBaseContracts": [
          814
        ],
        "name": "ERC20",
        "nameLocation": "6586:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70a08231",
            "id": 759,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "6608:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6626:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6618:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6617:17:0"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6658:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6658:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6657:6:0"
            },
            "scope": 814,
            "src": "6599:65:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 768,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "6679:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6696:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "6688:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6688:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6712:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "6707:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6687:32:0"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "6738:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6738:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6737:6:0"
            },
            "scope": 814,
            "src": "6670:74:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 777,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "6759:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6777:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "6769:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6769:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6792:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "6784:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6784:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6768:32:0"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "6824:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6824:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6823:6:0"
            },
            "scope": 814,
            "src": "6750:80:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 786,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6845:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6861:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "6853:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6853:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6875:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "6870:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6852:30:0"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "6901:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6900:6:0"
            },
            "scope": 814,
            "src": "6836:71:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 797,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6922:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6952:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "6944:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6976:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "6968:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6968:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7000:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "6995:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6995:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6934:78:0"
            },
            "returnParameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "7031:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7031:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7030:6:0"
            },
            "scope": 814,
            "src": "6913:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 805,
            "name": "Transfer",
            "nameLocation": "7049:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7074:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "7058:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7058:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7096:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "7080:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7080:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7105:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "7100:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7100:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7057:54:0"
            },
            "src": "7043:69:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 813,
            "name": "Approval",
            "nameLocation": "7123:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7148:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "7132:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7132:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7171:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "7155:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7155:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7185:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "7180:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7180:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7131:60:0"
            },
            "src": "7117:75:0"
          }
        ],
        "scope": 815,
        "src": "6576:618:0",
        "usedErrors": []
      }
    ],
    "src": "32:7162:0"
  },
  "bytecode": "",
  "bytecodeSha1": "339d570771962b296638560d11c904c6fc16b162",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "StakingRewards",
  "coverageMap": {
    "branches": {
      "0": {
        "StakingRewards.calculateReward": {
          "54": [
            4892,
            4932,
            false
          ]
        },
        "StakingRewards.claimReward": {
          "49": [
            3387,
            3417,
            true
          ],
          "50": [
            3456,
            3502,
            true
          ],
          "51": [
            3535,
            3572,
            true
          ],
          "52": [
            3623,
            3645,
            true
          ],
          "53": [
            3687,
            3710,
            true
          ]
        },
        "StakingRewards.setRewardRate": {
          "46": [
            6093,
            6109,
            false
          ]
        },
        "StakingRewards.stake": {
          "47": [
            1747,
            1758,
            true
          ],
          "48": [
            1923,
            1943,
            true
          ]
        },
        "StakingRewards.unstake": {
          "41": [
            2316,
            2346,
            true
          ],
          "42": [
            2409,
            2455,
            true
          ],
          "43": [
            2521,
            2543,
            true
          ],
          "44": [
            2674,
            2710,
            false
          ]
        },
        "StakingRewards.untilLockingEnd": {
          "45": [
            6399,
            6439,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "StakingRewards.calculateReward": {
          "32": [
            4124,
            4146
          ],
          "33": [
            4308,
            4336
          ],
          "34": [
            4514,
            4616
          ],
          "35": [
            4955,
            4990
          ],
          "36": [
            5052,
            5079
          ],
          "37": [
            5116,
            5226
          ],
          "38": [
            5414,
            5522
          ],
          "39": [
            5681,
            5778
          ],
          "40": [
            4389,
            4392
          ]
        },
        "StakingRewards.claimReward": {
          "24": [
            3379,
            3437
          ],
          "25": [
            3448,
            3516
          ],
          "26": [
            3527,
            3604
          ],
          "27": [
            3615,
            3668
          ],
          "28": [
            3679,
            3727
          ],
          "29": [
            3792,
            3814
          ],
          "30": [
            3842,
            3885
          ],
          "31": [
            3918,
            3944
          ]
        },
        "StakingRewards.ownerDeposit": {
          "0": [
            1320,
            1381
          ],
          "1": [
            1391,
            1417
          ]
        },
        "StakingRewards.ownerWithdraw": {
          "13": [
            1541,
            1583
          ],
          "14": [
            1593,
            1619
          ]
        },
        "StakingRewards.setRewardRate": {
          "17": [
            5973,
            6031
          ],
          "18": [
            6124,
            6178
          ]
        },
        "StakingRewards.stake": {
          "19": [
            1739,
            1779
          ],
          "20": [
            1915,
            1968
          ],
          "21": [
            2026,
            2046
          ],
          "22": [
            2056,
            2162
          ],
          "23": [
            2172,
            2192
          ]
        },
        "StakingRewards.unstake": {
          "2": [
            2308,
            2365
          ],
          "3": [
            2401,
            2469
          ],
          "4": [
            2513,
            2566
          ],
          "5": [
            2585,
            2605
          ],
          "6": [
            2825,
            2853
          ],
          "7": [
            2892,
            2941
          ],
          "8": [
            2989,
            3026
          ],
          "9": [
            3098,
            3119
          ],
          "10": [
            3161,
            3191
          ],
          "11": [
            3202,
            3223
          ],
          "12": [
            3233,
            3275
          ]
        },
        "StakingRewards.untilLockingEnd": {
          "15": [
            6454,
            6462
          ],
          "16": [
            6500,
            6553
          ]
        }
      }
    }
  },
  "dependencies": [
    "ERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638b7afe2e1161008c578063ade70abc11610066578063ade70abc14610198578063ae169a50146101a1578063d5a44f86146101b4578063f301af42146101f957600080fd5b80638b7afe2e146101695780639e447fc614610172578063a694fc3a1461018557600080fd5b806313a59eb9146100d4578063141833dc146100f05780632e17de781461010557806333f707d114610118578063484b46891461012b57806372f702f31461013e575b600080fd5b6100dd60025481565b6040519081526020015b60405180910390f35b6101036100fe36600461143e565b610227565b005b61010361011336600461143e565b6102d4565b61010361012636600461143e565b61061a565b6100dd61013936600461143e565b6106b9565b600054610151906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6100dd60035481565b61010361018036600461143e565b610725565b6100dd61019336600461143e565b610826565b6100dd60015481565b6101036101af36600461143e565b6109f6565b6101c76101c236600461143e565b610cf0565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0016100e7565b61020c61020736600461143e565b610d3b565b604080519384526020840192909252908201526060016100e7565b6004546001600160a01b0316331461023e57600080fd5b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190611457565b5080600360008282546102cc9190611496565b909155505050565b336001600160a01b0316600582815481106102f1576102f16114ae565b60009182526020909120600590910201546001600160a01b03161461034e5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420796f7572207374616b6560901b60448201526064015b60405180910390fd5b4260058281548110610362576103626114ae565b906000526020600020906005020160030154106103ad5760405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b6044820152606401610345565b6000600582815481106103c2576103c26114ae565b906000526020600020906005020160010154116104165760405162461bcd60e51b81526020600482015260126024820152714e6f7468696e6720746f20756e7374616b6560701b6044820152606401610345565b61041f81610d6e565b600060058281548110610434576104346114ae565b906000526020600020906005020160040154600354101561047b5760058281548110610462576104626114ae565b9060005260206000209060050201600101549050610539565b6005828154811061048e5761048e6114ae565b906000526020600020906005020160040154600583815481106104b3576104b36114ae565b9060005260206000209060050201600101546104cf9190611496565b9050600582815481106104e4576104e46114ae565b9060005260206000209060050201600401546003600082825461050791906114c4565b92505081905550600060058381548110610523576105236114ae565b9060005260206000209060050201600401819055505b6005828154811061054c5761054c6114ae565b9060005260206000209060050201600101546001600082825461056f91906114c4565b9250508190555060006005838154811061058b5761058b6114ae565b60009182526020822060059190910201600101919091555460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190611457565b505050565b6004546001600160a01b0316331461063157600080fd5b60005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a69190611457565b5080600360008282546102cc91906114c4565b600042600583815481106106cf576106cf6114ae565b90600052602060002090600502016003015410156106ef57506000919050565b4260058381548110610703576107036114ae565b90600052602060002090600502016003015461071f91906114c4565b92915050565b6004546001600160a01b0316331461073c57600080fd5b604080516060810182528281524260208201908152600092820183815260068054600180820183559582905293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60039095029485015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40840155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d419092019190915554111561082357600680544291906107fd906002906114c4565b8154811061080d5761080d6114ae565b9060005260206000209060030201600201819055505b50565b600080821161086a5760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f207374616b6560801b6044820152606401610345565b600080546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e69190611457565b90506001811515146109315760405162461bcd60e51b815260206004820152601460248201527322b93937b9103bb434b632903a3930b739b332b960611b6044820152606401610345565b82600160008282546109439190611496565b9250508190555060056040518060a00160405280336001600160a01b03168152602001858152602001428152602001600254426109809190611496565b815260006020918201819052835460018082018655948252908290208351600592830290910180546001600160a01b0319166001600160a01b0390921691909117815591830151938201939093556040820151600282015560608201516003820155608090910151600490910155549392505050565b336001600160a01b031660058281548110610a1357610a136114ae565b60009182526020909120600590910201546001600160a01b031614610a6c5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081e5bdd5c881c995dd85c99608a1b6044820152606401610345565b4260058281548110610a8057610a806114ae565b90600052602060002090600502016003015410610acb5760405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b6044820152606401610345565b60035460058281548110610ae157610ae16114ae565b9060005260206000209060050201600401541115610b415760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f7567682066756e647320746f207061796f75740000000000006044820152606401610345565b600060058281548110610b5657610b566114ae565b90600052602060002090600502016004015411610ba95760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c185e5bdd5d607a1b6044820152606401610345565b60058181548110610bbc57610bbc6114ae565b906000526020600020906005020160010154600014610c0b5760405162461bcd60e51b815260206004820152600b60248201526a55736520756e7374616b6560a81b6044820152606401610345565b600060058281548110610c2057610c206114ae565b9060005260206000209060050201600401549050600060058381548110610c4957610c496114ae565b6000918252602082206004600592909202018101929092555460405163a9059cbb60e01b81523392810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd49190611457565b508060036000828254610ce791906114c4565b90915550505050565b60058181548110610d0057600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b60068181548110610d4b57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600060058281548110610d8357610d836114ae565b906000526020600020906005020160040181905550600080640757b12c00905060058381548110610db657610db66114ae565b906000526020600020906005020160030154915060005b6006548110156114385760058481548110610dea57610dea6114ae565b90600052602060002090600502016002015460068281548110610e0f57610e0f6114ae565b90600052602060002090600302016001015411158015610e53575060068181548110610e3d57610e3d6114ae565b9060005260206000209060030201600201546000145b15610f2f578160058581548110610e6c57610e6c6114ae565b90600052602060002090600502016001015460068381548110610e9157610e916114ae565b90600052602060002090600302016000015460058781548110610eb657610eb66114ae565b90600052602060002090600502016002015486610ed391906114c4565b610edd91906114db565b610ee791906114db565b610ef191906114fa565b60058581548110610f0457610f046114ae565b90600052602060002090600502016004016000828254610f249190611496565b909155506114269050565b60058481548110610f4257610f426114ae565b90600052602060002090600502016002015460068281548110610f6757610f676114ae565b90600052602060002090600302016001015411158015610fcf575060058481548110610f9557610f956114ae565b90600052602060002090600502016002015460068281548110610fba57610fba6114ae565b90600052602060002090600302016002015410155b8015611000575060068181548110610fe957610fe96114ae565b906000526020600020906003020160020154600014155b156111825760006005858154811061101a5761101a6114ae565b9060005260206000209060050201600301546006838154811061103f5761103f6114ae565b906000526020600020906003020160020154106110825760058581548110611069576110696114ae565b90600052602060002090600502016003015490506110aa565b60068281548110611095576110956114ae565b90600052602060002090600302016002015490505b82600586815481106110be576110be6114ae565b906000526020600020906005020160010154600684815481106110e3576110e36114ae565b90600052602060002090600302016000015460058881548110611108576111086114ae565b9060005260206000209060050201600201548461112591906114c4565b61112f91906114db565b61113991906114db565b61114391906114fa565b60058681548110611156576111566114ae565b906000526020600020906005020160040160008282546111769190611496565b90915550611426915050565b60058481548110611195576111956114ae565b906000526020600020906005020160020154600682815481106111ba576111ba6114ae565b906000526020600020906003020160010154101580156111fe575082600682815481106111e9576111e96114ae565b90600052602060002090600302016002015411155b801561122f575060068181548110611218576112186114ae565b906000526020600020906003020160020154600014155b156112d3578160058581548110611248576112486114ae565b9060005260206000209060050201600101546006838154811061126d5761126d6114ae565b90600052602060002090600302016000015460068481548110611292576112926114ae565b906000526020600020906003020160010154600685815481106112b7576112b76114ae565b906000526020600020906003020160020154610ed391906114c4565b82600682815481106112e7576112e76114ae565b9060005260206000209060030201600101541115801561134f575060058481548110611315576113156114ae565b9060005260206000209060050201600201546006828154811061133a5761133a6114ae565b90600052602060002090600302016001015410155b15611426578160058581548110611368576113686114ae565b9060005260206000209060050201600101546006838154811061138d5761138d6114ae565b906000526020600020906003020160000154600684815481106113b2576113b26114ae565b906000526020600020906003020160010154866113cf91906114c4565b6113d991906114db565b6113e391906114db565b6113ed91906114fa565b60058581548110611400576114006114ae565b906000526020600020906005020160040160008282546114209190611496565b90915550505b806114308161151c565b915050610dcd565b50505050565b60006020828403121561145057600080fd5b5035919050565b60006020828403121561146957600080fd5b8151801515811461147957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114a9576114a9611480565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156114d6576114d6611480565b500390565b60008160001904831182151516156114f5576114f5611480565b500290565b60008261151757634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161152e5761152e611480565b506001019056fea26469706673582212207a7da37532dc2ce4d519dbfe59437f2df1d03d0eafbd021db421e510d09dba7c64736f6c634300080d0033",
  "deployedSourceMap": "57:6517:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:26;;;;;;;;;160:25:1;;;148:2;133:18;169:26:0;;;;;;;;1255:169;;;;;;:::i;:::-;;:::i;:::-;;2260:1062;;;;;;:::i;:::-;;:::i;1475:151::-;;;;;;:::i;:::-;;:::i;6325:246::-;;;;;;:::i;:::-;;:::i;87:25::-;;;;;-1:-1:-1;;;;;87:25:0;;;;;;-1:-1:-1;;;;;558:32:1;;;540:51;;528:2;513:18;87:25:0;381:216:1;273:27:0;;;;;;5907:350;;;;;;:::i;:::-;;:::i;1677:539::-;;;;;;:::i;:::-;;:::i;120:21::-;;;;;;3328:672;;;;;;:::i;:::-;;:::i;739:21::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;879:32:1;;;861:51;;943:2;928:18;;921:34;;;;971:18;;;964:34;;;;1029:2;1014:18;;1007:34;1072:3;1057:19;;1050:35;848:3;833:19;739:21:0;602:489:1;766:23:0;;;;;;:::i;:::-;;:::i;:::-;;;;1298:25:1;;;1354:2;1339:18;;1332:34;;;;1382:18;;;1375:34;1286:2;1271:18;766:23:0;1096:319:1;1255:169:0;1136:5;;-1:-1:-1;;;;;1136:5:0;1122:10;:19;1114:28;;;;;;1320:12:::1;::::0;:61:::1;::::0;-1:-1:-1;;;1320:61:0;;1346:10:::1;1320:61;::::0;::::1;1660:34:1::0;1366:4:0::1;1710:18:1::0;;;1703:43;1762:18;;;1755:34;;;-1:-1:-1;;;;;1320:12:0;;::::1;::::0;:25:::1;::::0;1595:18:1;;1320:61:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1410:7;1391:15;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;1255:169:0:o;2260:1062::-;2336:10;-1:-1:-1;;;;;2316:30:0;:6;2323:3;2316:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;-1:-1:-1;;;;;2316:16:0;:30;2308:57;;;;-1:-1:-1;;;2308:57:0;;2681:2:1;2308:57:0;;;2663:21:1;2720:2;2700:18;;;2693:30;-1:-1:-1;;;2739:18:1;;;2732:44;2793:18;;2308:57:0;;;;;;;;;2439:15;2409:6;2416:3;2409:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:46;2401:68;;;;-1:-1:-1;;;2401:68:0;;3024:2:1;2401:68:0;;;3006:21:1;3063:1;3043:18;;;3036:29;-1:-1:-1;;;3081:18:1;;;3074:39;3130:18;;2401:68:0;2822:332:1;2401:68:0;2542:1;2521:6;2528:3;2521:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:22;2513:53;;;;-1:-1:-1;;;2513:53:0;;3361:2:1;2513:53:0;;;3343:21:1;3400:2;3380:18;;;3373:30;-1:-1:-1;;;3419:18:1;;;3412:48;3477:18;;2513:53:0;3159:342:1;2513:53:0;2585:20;2601:3;2585:15;:20::i;:::-;2648:12;2692:6;2699:3;2692:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;2674:15;;:36;2671:480;;;2835:6;2842:3;2835:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;2825:28;;2671:480;;;2923:6;2930:3;2923:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;2902:6;2909:3;2902:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:39;;;;:::i;:::-;2892:49;;3008:6;3015:3;3008:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;2989:15;;:37;;;;;;;:::i;:::-;;;;;;;;3118:1;3098:6;3105:3;3098:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;:21;;;;2671:480;3173:6;3180:3;3173:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;3161:9;;:30;;;;;;;:::i;:::-;;;;;;;;3222:1;3202:6;3209:3;3202:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:18;;:21;;;;3233:12;:42;;-1:-1:-1;;;3233:42:0;;3255:10;3233:42;;;3810:51:1;3877:18;;;3870:34;;;-1:-1:-1;;;;;3233:12:0;;;;:21;;3783:18:1;;3233:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2298:1024;2260:1062;:::o;1475:151::-;1136:5;;-1:-1:-1;;;;;1136:5:0;1122:10;:19;1114:28;;;;;;1541:12:::1;::::0;:42:::1;::::0;-1:-1:-1;;;1541:42:0;;1563:10:::1;1541:42;::::0;::::1;3810:51:1::0;3877:18;;;3870:34;;;-1:-1:-1;;;;;1541:12:0;;::::1;::::0;:21:::1;::::0;3783:18:1;;1541:42:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1612:7;1593:15;;:26;;;;;;;:::i;6325:246::-:0;6380:4;6424:15;6399:6;6406:3;6399:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:40;6396:169;;;-1:-1:-1;6461:1:0;;6325:246;-1:-1:-1;6325:246:0:o;6396:169::-;6537:15;6507:6;6514:3;6507:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:46;;;;:::i;:::-;6500:53;6325:246;-1:-1:-1;;6325:246:0:o;5907:350::-;1136:5;;-1:-1:-1;;;;;1136:5:0;1122:10;:19;1114:28;;;;;;5986:44:::1;::::0;;::::1;::::0;::::1;::::0;;;;;6004:15:::1;5986:44;::::0;::::1;::::0;;;-1:-1:-1;5986:44:0;;;;;;5973:7:::1;:58:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;6093:14;:16:::1;6090:152;;;6124:7;6132:14:::0;;6162:15:::1;::::0;6124:7;6132:17:::1;::::0;6148:1:::1;::::0;6132:17:::1;:::i;:::-;6124:26;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;:54;;;;6090:152;5907:350:::0;:::o;1677:539::-;1723:4;1757:1;1747:7;:11;1739:40;;;;-1:-1:-1;;;1739:40:0;;4117:2:1;1739:40:0;;;4099:21:1;4156:2;4136:18;;;4129:30;-1:-1:-1;;;4175:18:1;;;4168:46;4231:18;;1739:40:0;3915:340:1;1739:40:0;1823:17;1843:12;;:61;;-1:-1:-1;;;1843:61:0;;1869:10;1843:61;;;1660:34:1;1889:4:0;1710:18:1;;;1703:43;1762:18;;;1755:34;;;-1:-1:-1;;;;;1843:12:0;;;;:25;;1595:18:1;;1843:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1823:81;-1:-1:-1;1939:4:0;1923:20;;;;1915:53;;;;-1:-1:-1;;;1915:53:0;;4462:2:1;1915:53:0;;;4444:21:1;4501:2;4481:18;;;4474:30;-1:-1:-1;;;4520:18:1;;;4513:50;4580:18;;1915:53:0;4260:344:1;1915:53:0;2039:7;2026:9;;:20;;;;;;;:::i;:::-;;;;;;;;2056:6;2068:93;;;;;;;;2074:10;-1:-1:-1;;;;;2068:93:0;;;;;2086:7;2068:93;;;;2100:15;2068:93;;;;2141:14;;2123:15;:32;;;;:::i;:::-;2068:93;;2159:1;2068:93;;;;;;;2056:106;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2056:106:0;-1:-1:-1;;;;;2056:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2179:13;;;-1:-1:-1;;;1677:539:0:o;3328:672::-;3407:10;-1:-1:-1;;;;;3387:30:0;:6;3394:3;3387:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;-1:-1:-1;;;;;3387:16:0;:30;3379:58;;;;-1:-1:-1;;;3379:58:0;;4811:2:1;3379:58:0;;;4793:21:1;4850:2;4830:18;;;4823:30;-1:-1:-1;;;4869:18:1;;;4862:45;4924:18;;3379:58:0;4609:339:1;3379:58:0;3486:15;3456:6;3463:3;3456:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:46;3448:68;;;;-1:-1:-1;;;3448:68:0;;3024:2:1;3448:68:0;;;3006:21:1;3063:1;3043:18;;;3036:29;-1:-1:-1;;;3081:18:1;;;3074:39;3130:18;;3448:68:0;2822:332:1;3448:68:0;3557:15;;3535:6;3542:3;3535:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:37;;3527:77;;;;-1:-1:-1;;;3527:77:0;;5155:2:1;3527:77:0;;;5137:21:1;5194:2;5174:18;;;5167:30;5233:28;5213:18;;;5206:56;5279:18;;3527:77:0;4953:350:1;3527:77:0;3644:1;3623:6;3630:3;3623:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:22;3615:53;;;;-1:-1:-1;;;3615:53:0;;5510:2:1;3615:53:0;;;5492:21:1;5549:2;5529:18;;;5522:30;-1:-1:-1;;;5568:18:1;;;5561:47;5625:18;;3615:53:0;5308:341:1;3615:53:0;3687:6;3694:3;3687:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;3709:1;3687:23;3679:48;;;;-1:-1:-1;;;3679:48:0;;5856:2:1;3679:48:0;;;5838:21:1;5895:2;5875:18;;;5868:30;-1:-1:-1;;;5914:18:1;;;5907:41;5965:18;;3679:48:0;5654:335:1;3679:48:0;3749:12;3763:6;3770:3;3763:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;3749:32;;3813:1;3792:6;3799:3;3792:11;;;;;;;;:::i;:::-;;;;;;;;:18;:11;;;;;;:18;;:22;;;;3842:12;:43;;-1:-1:-1;;;3842:43:0;;3864:10;3842:43;;;3810:51:1;;;;3877:18;;;3870:34;;;-1:-1:-1;;;;;3842:12:0;;:21;;3783:18:1;;3842:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3937:7;3918:15;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3328:672:0:o;739:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;739:21:0;;;;-1:-1:-1;739:21:0;;;;;:::o;766:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;766:23:0;:::o;4070:1774::-;4145:1;4124:6;4131:3;4124:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;:22;;;;4205:8;4223:12;4238:11;4223:26;;4314:6;4321:3;4314:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4308:28;;4361:6;4356:1480;4373:7;:14;4371:16;;4356:1480;;;4446:6;4453:3;4446:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4426:7;4434:1;4426:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;:42;;4425:70;;;;;4475:7;4483:1;4475:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;4493:1;4475:19;4425:70;4421:1404;;;4609:7;4589:6;4596:3;4589:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;4569:7;4577:1;4569:10;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;4543:6;4550:3;4543:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4537:3;:28;;;;:::i;:::-;4536:50;;;;:::i;:::-;:71;;;;:::i;:::-;4535:81;;;;:::i;:::-;4514:6;4521:3;4514:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:102;;;;;;;:::i;:::-;;;;-1:-1:-1;4421:1404:0;;-1:-1:-1;4421:1404:0;;4726:6;4733:3;4726:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4706:7;4714:1;4706:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;:42;;4705:90;;;;;4772:6;4779:3;4772:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4754:7;4762:1;4754:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;:40;;4705:90;:115;;;;;4800:7;4808:1;4800:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;4818:1;4800:19;;4705:115;4702:1123;;;4839:15;4910:6;4917:3;4910:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4892:7;4900:1;4892:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;:40;4889:209;;4968:6;4975:3;4968:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4955:35;;4889:209;;;5065:7;5073:1;5065:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;5052:27;;4889:209;5219:7;5199:6;5206:3;5199:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;5179:7;5187:1;5179:10;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;5153:6;5160:3;5153:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5140:10;:35;;;;:::i;:::-;5139:57;;;;:::i;:::-;:78;;;;:::i;:::-;5138:88;;;;:::i;:::-;5116:6;5123:3;5116:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:110;;;;;;;:::i;:::-;;;;-1:-1:-1;4702:1123:0;;-1:-1:-1;;4702:1123:0;;5318:6;5325:3;5318:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5298:7;5306:1;5298:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;:42;;5297:71;;;;;5364:3;5346:7;5354:1;5346:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;:21;;5297:71;:96;;;;;5373:7;5381:1;5373:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;5391:1;5373:19;;5297:96;5293:532;;;5515:7;5495:6;5502:3;5495:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;5475:7;5483:1;5475:10;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;5455:7;5463:1;5455:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;5438:7;5446:1;5438:10;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;:33;;;;:::i;5293:532::-;5610:3;5590:7;5598:1;5590:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;:23;;5589:73;;;;;5639:6;5646:3;5639:11;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5619:7;5627:1;5619:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;:42;;5589:73;5585:240;;;5771:7;5751:6;5758:3;5751:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;5731:7;5739:1;5731:10;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;5711:7;5719:1;5711:10;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;5705:3;:22;;;;:::i;:::-;5704:44;;;;:::i;:::-;:65;;;;:::i;:::-;5703:75;;;;:::i;:::-;5681:6;5688:3;5681:11;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:97;;;;;;;:::i;:::-;;;;-1:-1:-1;;5585:240:0;4389:3;;;;:::i;:::-;;;;4356:1480;;;;4114:1730;;4070:1774;:::o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o;1800:277::-;1867:6;1920:2;1908:9;1899:7;1895:23;1891:32;1888:52;;;1936:1;1933;1926:12;1888:52;1968:9;1962:16;2021:5;2014:13;2007:21;2000:5;1997:32;1987:60;;2043:1;2040;2033:12;1987:60;2066:5;1800:277;-1:-1:-1;;;1800:277:1:o;2082:127::-;2143:10;2138:3;2134:20;2131:1;2124:31;2174:4;2171:1;2164:15;2198:4;2195:1;2188:15;2214:128;2254:3;2285:1;2281:6;2278:1;2275:13;2272:39;;;2291:18;;:::i;:::-;-1:-1:-1;2327:9:1;;2214:128::o;2347:127::-;2408:10;2403:3;2399:20;2396:1;2389:31;2439:4;2436:1;2429:15;2463:4;2460:1;2453:15;3506:125;3546:4;3574:1;3571;3568:8;3565:34;;;3579:18;;:::i;:::-;-1:-1:-1;3616:9:1;;3506:125::o;5994:168::-;6034:7;6100:1;6096;6092:6;6088:14;6085:1;6082:21;6077:1;6070:9;6063:17;6059:45;6056:71;;;6107:18;;:::i;:::-;-1:-1:-1;6147:9:1;;5994:168::o;6167:217::-;6207:1;6233;6223:132;;6277:10;6272:3;6268:20;6265:1;6258:31;6312:4;6309:1;6302:15;6340:4;6337:1;6330:15;6223:132;-1:-1:-1;6369:9:1;;6167:217::o;6389:135::-;6428:3;6449:17;;;6446:43;;6469:18;;:::i;:::-;-1:-1:-1;6516:1:1;6505:13;;6389:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    6574
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B7AFE2E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xADE70ABC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xADE70ABC EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13A59EB9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x141833DC EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x33F707D1 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x484B4689 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH2 0xDD PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x151 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xDD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH2 0xDD PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F7420796F7572207374616B65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x362 JUMPI PUSH2 0x362 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x546F6F206561726C79 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3C2 JUMPI PUSH2 0x3C2 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7468696E6720746F20756E7374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH2 0x41F DUP2 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x462 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x539 JUMP JUMPDEST PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48E JUMPI PUSH2 0x48E PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4B3 JUMPI PUSH2 0x4B3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x58B JUMPI PUSH2 0x58B PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x5 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x6EF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST TIMESTAMP PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x703 JUMPI PUSH2 0x703 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP3 ADD DUP4 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP6 DUP3 SWAP1 MSTORE SWAP4 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x3 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD SSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP5 ADD SSTORE MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD GT ISZERO PUSH2 0x823 JUMPI PUSH1 0x6 DUP1 SLOAD TIMESTAMP SWAP2 SWAP1 PUSH2 0x7FD SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x80D JUMPI PUSH2 0x80D PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7468696E6720746F207374616B65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x22B93937B9103BB434B632903A3930B739B332B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP3 DUP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA13 JUMPI PUSH2 0xA13 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081E5BDD5C881C995DD85C99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA80 JUMPI PUSH2 0xA80 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x546F6F206561726C79 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE1 JUMPI PUSH2 0xAE1 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320746F207061796F7574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD GT PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD1A1A5B99C81D1BC81C185E5BDD5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBBC JUMPI PUSH2 0xBBC PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x0 EQ PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x55736520756E7374616B65 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC49 JUMPI PUSH2 0xC49 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP3 SWAP1 SWAP3 MUL ADD DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD83 JUMPI PUSH2 0xD83 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH5 0x757B12C00 SWAP1 POP PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDB6 JUMPI PUSH2 0xDB6 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE0F JUMPI PUSH2 0xE0F PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xE53 JUMPI POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE3D JUMPI PUSH2 0xE3D PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ JUMPDEST ISZERO PUSH2 0xF2F JUMPI DUP2 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xE6C JUMPI PUSH2 0xE6C PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xEB6 JUMPI PUSH2 0xEB6 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP7 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0xEE7 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0xEF1 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xF04 JUMPI PUSH2 0xF04 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF24 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1426 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF42 JUMPI PUSH2 0xF42 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xFCF JUMPI POP PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF95 JUMPI PUSH2 0xF95 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFBA JUMPI PUSH2 0xFBA PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1000 JUMPI POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFE9 JUMPI PUSH2 0xFE9 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x101A JUMPI PUSH2 0x101A PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x103F JUMPI PUSH2 0x103F PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT PUSH2 0x1082 JUMPI PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1095 JUMPI PUSH2 0x1095 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP JUMPDEST DUP3 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x10BE JUMPI PUSH2 0x10BE PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10E3 JUMPI PUSH2 0x10E3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1108 JUMPI PUSH2 0x1108 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x112F SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x1143 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1426 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1195 JUMPI PUSH2 0x1195 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11BA JUMPI PUSH2 0x11BA PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x11FE JUMPI POP DUP3 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11E9 JUMPI PUSH2 0x11E9 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x122F JUMPI POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1218 JUMPI PUSH2 0x1218 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ ISZERO JUMPDEST ISZERO PUSH2 0x12D3 JUMPI DUP2 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1248 JUMPI PUSH2 0x1248 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12B7 JUMPI PUSH2 0x12B7 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST DUP3 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E7 JUMPI PUSH2 0x12E7 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x134F JUMPI POP PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1315 JUMPI PUSH2 0x1315 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x133A JUMPI PUSH2 0x133A PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1426 JUMPI DUP2 PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1368 JUMPI PUSH2 0x1368 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x138D JUMPI PUSH2 0x138D PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x13B2 JUMPI PUSH2 0x13B2 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x13D9 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x13ED SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x5 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1400 JUMPI PUSH2 0x1400 PUSH2 0x14AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP1 PUSH2 0x1430 DUP2 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDCD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A9 PUSH2 0x1480 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D6 PUSH2 0x1480 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x1480 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1517 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x152E JUMPI PUSH2 0x152E PUSH2 0x1480 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x7DA37532DC2CE4D519DBFE59437F2DF1D03D0EAFBD021DB421E510 0xD0 SWAP14 0xBA PUSH29 0x64736F6C634300080D0033000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8B7AFE2E"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xADE70ABC"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xADE70ABC"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAE169A50"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD5A44F86"
    },
    "82": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "86": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF301AF42"
    },
    "93": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "97": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8B7AFE2E"
    },
    "109": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169"
    },
    "113": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E447FC6"
    },
    "120": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "124": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA694FC3A"
    },
    "131": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "135": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13A59EB9"
    },
    "147": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x141833DC"
    },
    "158": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "162": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E17DE78"
    },
    "169": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "173": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x33F707D1"
    },
    "180": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "184": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x484B4689"
    },
    "191": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "195": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x72F702F3"
    },
    "202": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "206": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        6574
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "offset": [
        169,
        195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "216": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "DUP2",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "225": {
      "op": "SWAP1"
    },
    "226": {
      "op": "DUP2"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "230": {
      "op": "ADD"
    },
    "231": {
      "offset": [
        169,
        195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "237": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "SUB",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        169,
        195
      ],
      "op": "RETURN",
      "path": "0"
    },
    "240": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "244": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "247": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "248": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "250": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "253": {
      "fn": "StakingRewards.ownerDeposit",
      "jump": "i",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "254": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "255": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "258": {
      "fn": "StakingRewards.ownerDeposit",
      "jump": "i",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "STOP",
      "path": "0"
    },
    "261": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "265": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "268": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "269": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "271": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "274": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4"
    },
    "279": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "284": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "287": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "288": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "290": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "293": {
      "fn": "StakingRewards.ownerWithdraw",
      "jump": "i",
      "offset": [
        1475,
        1626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61A"
    },
    "298": {
      "fn": "StakingRewards.ownerWithdraw",
      "jump": "i",
      "offset": [
        1475,
        1626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "299": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "300": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "303": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "306": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "307": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "309": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "312": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "i",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "313": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "314": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B9"
    },
    "317": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "i",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "318": {
      "offset": [
        87,
        112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "321": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "322": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "325": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "SHL"
    },
    "333": {
      "op": "SUB"
    },
    "334": {
      "offset": [
        87,
        112
      ],
      "op": "AND",
      "path": "0"
    },
    "335": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "336": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "340": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        87,
        112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "347": {
      "op": "SHL"
    },
    "348": {
      "op": "SUB"
    },
    "349": {
      "op": "SWAP1"
    },
    "350": {
      "op": "SWAP2"
    },
    "351": {
      "op": "AND"
    },
    "352": {
      "op": "DUP2"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "356": {
      "op": "ADD"
    },
    "357": {
      "offset": [
        87,
        112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "360": {
      "op": "JUMP"
    },
    "361": {
      "offset": [
        273,
        300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "362": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        273,
        300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "365": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        273,
        300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "367": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        273,
        300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "368": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        273,
        300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "369": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        273,
        300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "370": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "374": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "377": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "378": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "380": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "383": {
      "fn": "StakingRewards.setRewardRate",
      "jump": "i",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "388": {
      "fn": "StakingRewards.setRewardRate",
      "jump": "i",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "393": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193"
    },
    "396": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "397": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "399": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "402": {
      "fn": "StakingRewards.stake",
      "jump": "i",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "403": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x826"
    },
    "407": {
      "fn": "StakingRewards.stake",
      "jump": "i",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "408": {
      "offset": [
        120,
        141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "StakingRewards.stake",
      "offset": [
        120,
        141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "412": {
      "fn": "StakingRewards.stake",
      "offset": [
        120,
        141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "414": {
      "fn": "StakingRewards.stake",
      "offset": [
        120,
        141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "415": {
      "fn": "StakingRewards.stake",
      "offset": [
        120,
        141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "416": {
      "fn": "StakingRewards.stake",
      "offset": [
        120,
        141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "421": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "430": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F6"
    },
    "435": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "offset": [
        739,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "437": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7"
    },
    "440": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2"
    },
    "443": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "444": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "446": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "449": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        739,
        760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "450": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF0"
    },
    "454": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        739,
        760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "455": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "458": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP1",
      "path": "0"
    },
    "459": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "466": {
      "op": "SHL"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "op": "SWAP1"
    },
    "469": {
      "op": "SWAP7"
    },
    "470": {
      "op": "AND"
    },
    "471": {
      "op": "DUP7"
    },
    "472": {
      "op": "MSTORE"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "475": {
      "op": "DUP7"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "SWAP5"
    },
    "478": {
      "op": "SWAP1"
    },
    "479": {
      "op": "SWAP5"
    },
    "480": {
      "op": "MSTORE"
    },
    "481": {
      "op": "SWAP3"
    },
    "482": {
      "op": "DUP5"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "op": "SWAP2"
    },
    "485": {
      "op": "SWAP1"
    },
    "486": {
      "op": "SWAP2"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "490": {
      "op": "DUP4"
    },
    "491": {
      "op": "ADD"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "495": {
      "op": "DUP3"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "op": "MSTORE"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "504": {
      "op": "JUMP"
    },
    "505": {
      "offset": [
        766,
        789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C"
    },
    "509": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "512": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "513": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "515": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143E"
    },
    "518": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        766,
        789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "519": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3B"
    },
    "523": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        766,
        789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "524": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "525": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "527": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "528": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "529": {
      "op": "SWAP4"
    },
    "530": {
      "op": "DUP5"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "534": {
      "op": "DUP5"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "SWAP3"
    },
    "537": {
      "op": "SWAP1"
    },
    "538": {
      "op": "SWAP3"
    },
    "539": {
      "op": "MSTORE"
    },
    "540": {
      "op": "SWAP1"
    },
    "541": {
      "op": "DUP3"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "550": {
      "op": "JUMP"
    },
    "551": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "offset": [
        1136,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "554": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1136,
        1141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "offset": [
        1136,
        1141
      ],
      "op": "AND",
      "path": "0"
    },
    "564": {
      "offset": [
        1122,
        1132
      ],
      "op": "CALLER",
      "path": "0"
    },
    "565": {
      "offset": [
        1122,
        1141
      ],
      "op": "EQ",
      "path": "0"
    },
    "566": {
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "569": {
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "570": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "572": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1114,
        1142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "573": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1114,
        1142
      ],
      "op": "REVERT",
      "path": "0"
    },
    "574": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "575": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "577": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "578": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "580": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "581": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "590": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "591": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1346,
        1356
      ],
      "op": "CALLER",
      "path": "0"
    },
    "592": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "594": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP3",
      "path": "0"
    },
    "595": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1366,
        1370
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "605": {
      "op": "DUP2"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "DUP4"
    },
    "608": {
      "op": "SWAP1"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "619": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "620": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "AND",
      "path": "0"
    },
    "621": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "622": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1345
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "627": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "633": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "635": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "636": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "637": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP4",
      "path": "0"
    },
    "638": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "SUB",
      "path": "0"
    },
    "639": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "640": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP8",
      "path": "0"
    },
    "643": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "GAS",
      "path": "0"
    },
    "644": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "CALL",
      "path": "0"
    },
    "645": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "646": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "647": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "648": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "651": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "652": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "653": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "656": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "657": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "658": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "660": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "REVERT",
      "path": "0"
    },
    "661": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "663": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "664": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "665": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "666": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "668": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "669": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "670": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "672": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "NOT",
      "path": "0"
    },
    "673": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "675": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP3",
      "path": "0"
    },
    "676": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ADD",
      "path": "0"
    },
    "677": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "AND",
      "path": "0"
    },
    "678": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP3",
      "path": "0"
    },
    "679": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "681": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "683": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "684": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "685": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "688": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B9"
    },
    "691": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "692": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "696": {
      "fn": "StakingRewards.ownerDeposit",
      "jump": "i",
      "offset": [
        1320,
        1381
      ],
      "op": "JUMP",
      "path": "0"
    },
    "697": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "698": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1320,
        1381
      ],
      "op": "POP",
      "path": "0"
    },
    "699": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1410,
        1417
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "700": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "702": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "704": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "DUP3",
      "path": "0"
    },
    "705": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "DUP3",
      "path": "0"
    },
    "706": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "707": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "710": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "711": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "715": {
      "fn": "StakingRewards.ownerDeposit",
      "jump": "i",
      "offset": [
        1391,
        1417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "716": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "717": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "718": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "719": {
      "fn": "StakingRewards.ownerDeposit",
      "offset": [
        1391,
        1417
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "StakingRewards.ownerDeposit",
      "jump": "o",
      "offset": [
        1255,
        1424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "724": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "725": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2336,
        2346
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "op": "SUB"
    },
    "734": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2346
      ],
      "op": "AND",
      "path": "0"
    },
    "735": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "737": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2323,
        2326
      ],
      "op": "DUP3",
      "path": "0"
    },
    "738": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "740": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "741": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "LT",
      "path": "0"
    },
    "742": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "745": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "746": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "749": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "752": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2316,
        2327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "753": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "754": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "756": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "757": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "DUP3",
      "path": "0"
    },
    "758": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "759": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "761": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "763": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "764": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "766": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "767": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "MUL",
      "path": "0"
    },
    "769": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2327
      ],
      "op": "ADD",
      "path": "0"
    },
    "770": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2332
      ],
      "op": "AND",
      "path": "0"
    },
    "780": {
      "branch": 41,
      "fn": "StakingRewards.unstake",
      "offset": [
        2316,
        2346
      ],
      "op": "EQ",
      "path": "0"
    },
    "781": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34E"
    },
    "784": {
      "branch": 41,
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "785": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "787": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "796": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "799": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "801": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "DUP3",
      "path": "0"
    },
    "802": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "ADD",
      "path": "0"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "808": {
      "op": "DUP3"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH14",
      "value": "0x4E6F7420796F7572207374616B65"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "831": {
      "op": "DUP3"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "838": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "840": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "841": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "842": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "843": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "SUB",
      "path": "0"
    },
    "844": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "845": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "846": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2308,
        2365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "847": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2439,
        2454
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 3
    },
    "848": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "850": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2416,
        2419
      ],
      "op": "DUP3",
      "path": "0"
    },
    "851": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "853": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "854": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "LT",
      "path": "0"
    },
    "855": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "858": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "859": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x362"
    },
    "862": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "865": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2409,
        2420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "866": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "867": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "870": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "871": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "873": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "875": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "876": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "877": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "879": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "MUL",
      "path": "0"
    },
    "880": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2420
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "883": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2431
      ],
      "op": "ADD",
      "path": "0"
    },
    "884": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "885": {
      "branch": 42,
      "fn": "StakingRewards.unstake",
      "offset": [
        2409,
        2455
      ],
      "op": "LT",
      "path": "0"
    },
    "886": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AD"
    },
    "889": {
      "branch": 42,
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "890": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "892": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "906": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "DUP3",
      "path": "0"
    },
    "907": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "ADD",
      "path": "0"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "913": {
      "op": "DUP3"
    },
    "914": {
      "op": "ADD"
    },
    "915": {
      "op": "MSTORE"
    },
    "916": {
      "op": "PUSH9",
      "value": "0x546F6F206561726C79"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "940": {
      "op": "JUMP"
    },
    "941": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2401,
        2469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "942": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2542,
        2543
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "944": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "946": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2528,
        2531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "947": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "DUP2",
      "path": "0"
    },
    "948": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "949": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "LT",
      "path": "0"
    },
    "951": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "954": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "955": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C2"
    },
    "958": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "961": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2521,
        2532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "962": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "963": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "966": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "967": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "969": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "971": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "972": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "973": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "975": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "MUL",
      "path": "0"
    },
    "976": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2532
      ],
      "op": "ADD",
      "path": "0"
    },
    "977": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "979": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2539
      ],
      "op": "ADD",
      "path": "0"
    },
    "980": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2539
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "981": {
      "branch": 43,
      "fn": "StakingRewards.unstake",
      "offset": [
        2521,
        2543
      ],
      "op": "GT",
      "path": "0"
    },
    "982": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x416"
    },
    "985": {
      "branch": 43,
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "986": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "988": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "997": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1000": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1002": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1003": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "ADD",
      "path": "0"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1009": {
      "op": "DUP3"
    },
    "1010": {
      "op": "ADD"
    },
    "1011": {
      "op": "MSTORE"
    },
    "1012": {
      "op": "PUSH18",
      "value": "0x4E6F7468696E6720746F20756E7374616B65"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1036": {
      "op": "DUP3"
    },
    "1037": {
      "op": "ADD"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1041": {
      "op": "ADD"
    },
    "1042": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "1045": {
      "op": "JUMP"
    },
    "1046": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2513,
        2566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1047": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2585,
        2605
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x41F"
    },
    "1050": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2601,
        2604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1051": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2585,
        2600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6E"
    },
    "1054": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2585,
        2605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1055": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2585,
        2605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1056": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2648,
        2660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1058": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1060": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2699,
        2702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1061": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1062": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1063": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1064": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "LT",
      "path": "0"
    },
    "1065": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x434"
    },
    "1068": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1069": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x434"
    },
    "1072": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1075": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2692,
        2703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1076": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1077": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1080": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1081": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1083": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1085": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1086": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1087": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1089": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "MUL",
      "path": "0"
    },
    "1090": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2703
      ],
      "op": "ADD",
      "path": "0"
    },
    "1091": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1093": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1094": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2692,
        2710
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1095": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2674,
        2689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1097": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2674,
        2689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1098": {
      "branch": 44,
      "fn": "StakingRewards.unstake",
      "offset": [
        2674,
        2710
      ],
      "op": "LT",
      "path": "0"
    },
    "1099": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1100": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1103": {
      "branch": 44,
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1104": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x5"
    },
    "1106": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2842,
        2845
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1107": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1109": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1110": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "LT",
      "path": "0"
    },
    "1111": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "1114": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1115": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "1118": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1121": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1122": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1123": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1126": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1127": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1129": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1131": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1132": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1133": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1135": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "MUL",
      "path": "0"
    },
    "1136": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2846
      ],
      "op": "ADD",
      "path": "0"
    },
    "1137": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1139": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2853
      ],
      "op": "ADD",
      "path": "0"
    },
    "1140": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2835,
        2853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1141": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2825,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1142": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2825,
        2853
      ],
      "op": "POP",
      "path": "0"
    },
    "1143": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x539"
    },
    "1146": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1147": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1148": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2929
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x5"
    },
    "1150": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2930,
        2933
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1151": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1153": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1154": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "LT",
      "path": "0"
    },
    "1155": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48E"
    },
    "1158": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1159": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48E"
    },
    "1162": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1165": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2923,
        2934
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1166": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1167": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1168": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1170": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1173": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1175": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1176": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1177": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1179": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "MUL",
      "path": "0"
    },
    "1180": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2934
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1183": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1184": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2923,
        2941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1185": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1187": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2909,
        2912
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1188": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1189": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1190": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1191": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "LT",
      "path": "0"
    },
    "1192": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B3"
    },
    "1195": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1196": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B3"
    },
    "1199": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1202": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2902,
        2913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1203": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1204": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1205": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1207": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1208": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1210": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1212": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1213": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1216": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "MUL",
      "path": "0"
    },
    "1217": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2913
      ],
      "op": "ADD",
      "path": "0"
    },
    "1218": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1220": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1221": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1222": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CF"
    },
    "1225": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1226": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1227": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "1230": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2902,
        2941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2902,
        2941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1232": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2892,
        2941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1233": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2892,
        2941
      ],
      "op": "POP",
      "path": "0"
    },
    "1234": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x5"
    },
    "1236": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3015,
        3018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1237": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1239": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "LT",
      "path": "0"
    },
    "1241": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E4"
    },
    "1244": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1245": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E4"
    },
    "1248": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1251": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3008,
        3019
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1252": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1253": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1256": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1257": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1259": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1261": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1262": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1265": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "MUL",
      "path": "0"
    },
    "1266": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3019
      ],
      "op": "ADD",
      "path": "0"
    },
    "1267": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1269": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3026
      ],
      "op": "ADD",
      "path": "0"
    },
    "1270": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3008,
        3026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1271": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1273": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1275": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1276": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1277": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1278": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1281": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1282": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1283": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "1286": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        2989,
        3026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1287": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1288": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1289": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "POP",
      "path": "0"
    },
    "1291": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1293": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1294": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2989,
        3026
      ],
      "op": "POP",
      "path": "0"
    },
    "1295": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3118,
        3119
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1297": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1299": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3105,
        3108
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1300": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1301": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1302": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1303": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "LT",
      "path": "0"
    },
    "1304": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x523"
    },
    "1307": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1308": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x523"
    },
    "1311": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1314": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3098,
        3109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1315": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1316": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1317": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1319": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1320": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1322": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1324": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1325": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1326": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1328": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "MUL",
      "path": "0"
    },
    "1329": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3109
      ],
      "op": "ADD",
      "path": "0"
    },
    "1330": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1332": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3116
      ],
      "op": "ADD",
      "path": "0"
    },
    "1333": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3119
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1336": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3098,
        3119
      ],
      "op": "POP",
      "path": "0"
    },
    "1337": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2671,
        3151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1338": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x5"
    },
    "1340": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3180,
        3183
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1341": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1342": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1344": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "LT",
      "path": "0"
    },
    "1345": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1348": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1349": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1352": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1355": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3173,
        3184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1356": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1357": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1358": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1360": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1361": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1363": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1365": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1366": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1367": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1369": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "MUL",
      "path": "0"
    },
    "1370": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3184
      ],
      "op": "ADD",
      "path": "0"
    },
    "1371": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1373": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3191
      ],
      "op": "ADD",
      "path": "0"
    },
    "1374": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3173,
        3191
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1375": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1377": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1379": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1380": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1381": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1382": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56F"
    },
    "1385": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1386": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "1390": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3161,
        3191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1391": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1393": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "POP",
      "path": "0"
    },
    "1395": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1397": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1398": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3161,
        3191
      ],
      "op": "POP",
      "path": "0"
    },
    "1399": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3222,
        3223
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "1401": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1403": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3209,
        3212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1404": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1406": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1407": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "LT",
      "path": "0"
    },
    "1408": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1411": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1412": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1415": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1418": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3202,
        3213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1419": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1422": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1423": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1424": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1425": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1427": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1428": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1429": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1431": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1432": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1433": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1434": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "MUL",
      "path": "0"
    },
    "1435": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1436": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1438": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3220
      ],
      "op": "ADD",
      "path": "0"
    },
    "1439": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1440": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1441": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1442": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3202,
        3223
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1443": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3245
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 12
    },
    "1444": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1446": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1447": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1456": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1457": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3255,
        3265
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1458": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1460": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1461": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1465": {
      "op": "DUP2"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "DUP4"
    },
    "1468": {
      "op": "SWAP1"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1476": {
      "op": "SHL"
    },
    "1477": {
      "op": "SUB"
    },
    "1478": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1479": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1480": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3245
      ],
      "op": "AND",
      "path": "0"
    },
    "1481": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1482": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3254
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1487": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1493": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1495": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1496": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1497": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1498": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "SUB",
      "path": "0"
    },
    "1499": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1500": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1502": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1503": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "GAS",
      "path": "0"
    },
    "1504": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "CALL",
      "path": "0"
    },
    "1505": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1506": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1507": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1508": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F1"
    },
    "1511": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1512": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1513": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1515": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1516": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1517": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1518": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1520": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1521": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1522": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1523": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1524": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1525": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1526": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1528": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1529": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1530": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1532": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "NOT",
      "path": "0"
    },
    "1533": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1535": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1536": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1537": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "AND",
      "path": "0"
    },
    "1538": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1539": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1540": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1541": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1543": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1544": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1545": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1546": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1547": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x615"
    },
    "1551": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1552": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1553": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "1556": {
      "fn": "StakingRewards.unstake",
      "jump": "i",
      "offset": [
        3233,
        3275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1557": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1558": {
      "fn": "StakingRewards.unstake",
      "offset": [
        3233,
        3275
      ],
      "op": "POP",
      "path": "0"
    },
    "1559": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2298,
        3322
      ],
      "op": "POP",
      "path": "0"
    },
    "1560": {
      "fn": "StakingRewards.unstake",
      "offset": [
        2260,
        3322
      ],
      "op": "POP",
      "path": "0"
    },
    "1561": {
      "fn": "StakingRewards.unstake",
      "jump": "o",
      "offset": [
        2260,
        3322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1562": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1475,
        1626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1563": {
      "offset": [
        1136,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1565": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1136,
        1141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "offset": [
        1136,
        1141
      ],
      "op": "AND",
      "path": "0"
    },
    "1575": {
      "offset": [
        1122,
        1132
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1576": {
      "offset": [
        1122,
        1141
      ],
      "op": "EQ",
      "path": "0"
    },
    "1577": {
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x631"
    },
    "1580": {
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1581": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1583": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1114,
        1142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1584": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1114,
        1142
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1585": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1586": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1588": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1589": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1591": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1592": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1601": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1602": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1563,
        1573
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1603": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1605": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1606": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1610": {
      "op": "DUP2"
    },
    "1611": {
      "op": "ADD"
    },
    "1612": {
      "op": "DUP4"
    },
    "1613": {
      "op": "SWAP1"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1625": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "AND",
      "path": "0"
    },
    "1626": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1627": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1562
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1632": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1638": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1640": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1641": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1642": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1643": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "SUB",
      "path": "0"
    },
    "1644": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1645": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1647": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1648": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "GAS",
      "path": "0"
    },
    "1649": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "CALL",
      "path": "0"
    },
    "1650": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1651": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1652": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1653": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x682"
    },
    "1656": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1657": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1658": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1660": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1661": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1662": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1663": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1665": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1666": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1667": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1668": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1669": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1670": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1671": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1673": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1674": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1675": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1677": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "NOT",
      "path": "0"
    },
    "1678": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1680": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1681": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "1682": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "AND",
      "path": "0"
    },
    "1683": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1684": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "1685": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1686": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1688": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1689": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1690": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1691": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "1692": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1693": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "1696": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1697": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1698": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "1701": {
      "fn": "StakingRewards.ownerWithdraw",
      "jump": "i",
      "offset": [
        1541,
        1583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1702": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1541,
        1583
      ],
      "op": "POP",
      "path": "0"
    },
    "1704": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1612,
        1619
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "1705": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1707": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1709": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1710": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1711": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1712": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "1715": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1716": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1717": {
      "fn": "StakingRewards.ownerWithdraw",
      "offset": [
        1593,
        1619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "1720": {
      "fn": "StakingRewards.ownerWithdraw",
      "jump": "i",
      "offset": [
        1593,
        1619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1721": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6380,
        6384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1724": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6424,
        6439
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1725": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1727": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6406,
        6409
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1728": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1729": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1730": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1731": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "LT",
      "path": "0"
    },
    "1732": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1735": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1736": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1739": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1742": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "i",
      "offset": [
        6399,
        6410
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1743": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1747": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1748": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1750": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1752": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1753": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1754": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1756": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "MUL",
      "path": "0"
    },
    "1757": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6410
      ],
      "op": "ADD",
      "path": "0"
    },
    "1758": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1760": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6421
      ],
      "op": "ADD",
      "path": "0"
    },
    "1761": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6421
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1762": {
      "branch": 45,
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6399,
        6439
      ],
      "op": "LT",
      "path": "0"
    },
    "1763": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6396,
        6565
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1764": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6396,
        6565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EF"
    },
    "1767": {
      "branch": 45,
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6396,
        6565
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6461,
        6462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "1771": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6461,
        6462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1772": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "o",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1775": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6396,
        6565
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1776": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6537,
        6552
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 16
    },
    "1777": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1779": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6514,
        6517
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1780": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1781": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1782": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1783": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "LT",
      "path": "0"
    },
    "1784": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x703"
    },
    "1787": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1788": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x703"
    },
    "1791": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "1794": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "i",
      "offset": [
        6507,
        6518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1795": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1796": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1797": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1799": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1800": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1802": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1804": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1805": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1806": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1808": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "MUL",
      "path": "0"
    },
    "1809": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6518
      ],
      "op": "ADD",
      "path": "0"
    },
    "1810": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1812": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6529
      ],
      "op": "ADD",
      "path": "0"
    },
    "1813": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6529
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1814": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "1817": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1818": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1819": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "1822": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "i",
      "offset": [
        6507,
        6553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1823": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6507,
        6553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1824": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6500,
        6553
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1825": {
      "fn": "StakingRewards.untilLockingEnd",
      "offset": [
        6325,
        6571
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "fn": "StakingRewards.untilLockingEnd",
      "jump": "o",
      "offset": [
        6325,
        6571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "offset": [
        1136,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1832": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        1136,
        1141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "offset": [
        1136,
        1141
      ],
      "op": "AND",
      "path": "0"
    },
    "1842": {
      "offset": [
        1122,
        1132
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1843": {
      "offset": [
        1122,
        1141
      ],
      "op": "EQ",
      "path": "0"
    },
    "1844": {
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73C"
    },
    "1847": {
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1848": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        1114,
        1142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1850": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        1114,
        1142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1851": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        1114,
        1142
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1852": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        1114,
        1142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1853": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "1855": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1856": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1857": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1859": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1860": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "ADD",
      "path": "0"
    },
    "1861": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1862": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1863": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1864": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1865": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1866": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6004,
        6019
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1867": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1869": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "ADD",
      "path": "0"
    },
    "1871": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1873": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1876": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1877": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1878": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "ADD",
      "path": "0"
    },
    "1879": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1880": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5986,
        6030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1882": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        5980
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1884": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1885": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1886": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1888": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1889": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1890": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "ADD",
      "path": "0"
    },
    "1891": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1892": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1893": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1894": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1895": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1896": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1897": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1898": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1899": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1932": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1934": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1936": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "MUL",
      "path": "0"
    },
    "1937": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1938": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1939": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "ADD",
      "path": "0"
    },
    "1940": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1941": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1942": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1943": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
    },
    "1976": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1977": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "ADD",
      "path": "0"
    },
    "1978": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1979": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1980": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
    },
    "2013": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2014": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2015": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "ADD",
      "path": "0"
    },
    "2016": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2017": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2018": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2019": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5973,
        6031
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2020": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6093,
        6107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2021": {
      "branch": 46,
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6093,
        6109
      ],
      "op": "GT",
      "path": "0"
    },
    "2022": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6090,
        6242
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2023": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6090,
        6242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x823"
    },
    "2026": {
      "branch": 46,
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6090,
        6242
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2027": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6131
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x6"
    },
    "2029": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2030": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2031": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6162,
        6177
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2032": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6162,
        6177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2033": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2034": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "2037": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2038": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6148,
        6149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2040": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6148,
        6149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2041": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "2044": {
      "fn": "StakingRewards.setRewardRate",
      "jump": "i",
      "offset": [
        6132,
        6149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2045": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6132,
        6149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2047": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2048": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2049": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "LT",
      "path": "0"
    },
    "2050": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80D"
    },
    "2053": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2054": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80D"
    },
    "2057": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "2060": {
      "fn": "StakingRewards.setRewardRate",
      "jump": "i",
      "offset": [
        6124,
        6150
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2061": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2062": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2063": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2065": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2066": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2068": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2070": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2071": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2072": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2074": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "MUL",
      "path": "0"
    },
    "2075": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6150
      ],
      "op": "ADD",
      "path": "0"
    },
    "2076": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2078": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6154
      ],
      "op": "ADD",
      "path": "0"
    },
    "2079": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2080": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6178
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2082": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6124,
        6178
      ],
      "op": "POP",
      "path": "0"
    },
    "2083": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        6090,
        6242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2084": {
      "fn": "StakingRewards.setRewardRate",
      "offset": [
        5907,
        6257
      ],
      "op": "POP",
      "path": "0"
    },
    "2085": {
      "fn": "StakingRewards.setRewardRate",
      "jump": "o",
      "offset": [
        5907,
        6257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2086": {
      "fn": "StakingRewards.stake",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2087": {
      "fn": "StakingRewards.stake",
      "offset": [
        1723,
        1727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2089": {
      "fn": "StakingRewards.stake",
      "offset": [
        1757,
        1758
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "2090": {
      "fn": "StakingRewards.stake",
      "offset": [
        1747,
        1754
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2091": {
      "branch": 47,
      "fn": "StakingRewards.stake",
      "offset": [
        1747,
        1758
      ],
      "op": "GT",
      "path": "0"
    },
    "2092": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86A"
    },
    "2095": {
      "branch": 47,
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2096": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2098": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2107": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2110": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2112": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2113": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "ADD",
      "path": "0"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "PUSH16",
      "value": "0x4E6F7468696E6720746F207374616B65"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "ADD"
    },
    "2146": {
      "op": "MSTORE"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2153": {
      "op": "JUMP"
    },
    "2154": {
      "fn": "StakingRewards.stake",
      "offset": [
        1739,
        1779
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2155": {
      "fn": "StakingRewards.stake",
      "offset": [
        1823,
        1840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2157": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2158": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2159": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2161": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2162": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2171": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2172": {
      "fn": "StakingRewards.stake",
      "offset": [
        1869,
        1879
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2173": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2175": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2176": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "fn": "StakingRewards.stake",
      "offset": [
        1889,
        1893
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2186": {
      "op": "DUP2"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "op": "DUP6"
    },
    "2189": {
      "op": "SWAP1"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2200": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2201": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "2202": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2203": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1868
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "2208": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2211": {
      "op": "ADD"
    },
    "2212": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2214": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2216": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2217": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2218": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2219": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "SUB",
      "path": "0"
    },
    "2220": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2221": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2223": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2224": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "GAS",
      "path": "0"
    },
    "2225": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "CALL",
      "path": "0"
    },
    "2226": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2227": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2228": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2229": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C2"
    },
    "2232": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2233": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2234": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2236": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2237": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2238": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2239": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2241": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2242": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2243": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "POP",
      "path": "0"
    },
    "2244": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "POP",
      "path": "0"
    },
    "2245": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "POP",
      "path": "0"
    },
    "2246": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "POP",
      "path": "0"
    },
    "2247": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2249": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2250": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2251": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2253": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "NOT",
      "path": "0"
    },
    "2254": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2256": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2257": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "2258": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "AND",
      "path": "0"
    },
    "2259": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2260": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "2261": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2262": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2264": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2265": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "POP",
      "path": "0"
    },
    "2266": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2267": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "2268": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2269": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E6"
    },
    "2272": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2273": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2274": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "2277": {
      "fn": "StakingRewards.stake",
      "jump": "i",
      "offset": [
        1843,
        1904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2278": {
      "fn": "StakingRewards.stake",
      "offset": [
        1843,
        1904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2279": {
      "fn": "StakingRewards.stake",
      "offset": [
        1823,
        1904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2280": {
      "op": "POP"
    },
    "2281": {
      "fn": "StakingRewards.stake",
      "offset": [
        1939,
        1943
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "2283": {
      "fn": "StakingRewards.stake",
      "offset": [
        1923,
        1943
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2284": {
      "fn": "StakingRewards.stake",
      "offset": [
        1923,
        1943
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2285": {
      "fn": "StakingRewards.stake",
      "offset": [
        1923,
        1943
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2286": {
      "branch": 48,
      "fn": "StakingRewards.stake",
      "offset": [
        1923,
        1943
      ],
      "op": "EQ",
      "path": "0"
    },
    "2287": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "2290": {
      "branch": 48,
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2291": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2293": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2300": {
      "op": "SHL"
    },
    "2301": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2302": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2305": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2307": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2308": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "ADD",
      "path": "0"
    },
    "2309": {
      "op": "MSTORE"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "ADD"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH20",
      "value": "0x22B93937B9103BB434B632903A3930B739B332B9"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2343": {
      "op": "DUP3"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "op": "MSTORE"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "fn": "StakingRewards.stake",
      "offset": [
        1915,
        1968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "StakingRewards.stake",
      "offset": [
        2039,
        2046
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 21
    },
    "2355": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2357": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2359": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2360": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2361": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2362": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x943"
    },
    "2365": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2366": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2367": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "2370": {
      "fn": "StakingRewards.stake",
      "jump": "i",
      "offset": [
        2026,
        2046
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2371": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2372": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2373": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "POP",
      "path": "0"
    },
    "2374": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "POP",
      "path": "0"
    },
    "2375": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2376": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2377": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2378": {
      "fn": "StakingRewards.stake",
      "offset": [
        2026,
        2046
      ],
      "op": "POP",
      "path": "0"
    },
    "2379": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2062
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x5"
    },
    "2381": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2383": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2384": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2385": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2387": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2388": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2390": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2391": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2392": {
      "fn": "StakingRewards.stake",
      "offset": [
        2074,
        2084
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "AND",
      "path": "0"
    },
    "2402": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2403": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2404": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2406": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2407": {
      "fn": "StakingRewards.stake",
      "offset": [
        2086,
        2093
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2408": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2409": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2410": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2412": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2413": {
      "fn": "StakingRewards.stake",
      "offset": [
        2100,
        2115
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2414": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2415": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2416": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2418": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2419": {
      "fn": "StakingRewards.stake",
      "offset": [
        2141,
        2155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2421": {
      "fn": "StakingRewards.stake",
      "offset": [
        2141,
        2155
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2422": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2138
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2423": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x980"
    },
    "2426": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2155
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2427": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "2431": {
      "fn": "StakingRewards.stake",
      "jump": "i",
      "offset": [
        2123,
        2155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2432": {
      "fn": "StakingRewards.stake",
      "offset": [
        2123,
        2155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2433": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2434": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2435": {
      "fn": "StakingRewards.stake",
      "offset": [
        2159,
        2160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2437": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2439": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2440": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2441": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2442": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2443": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2444": {
      "fn": "StakingRewards.stake",
      "offset": [
        2068,
        2161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2445": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2446": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2447": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2449": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2450": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2451": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2452": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2453": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2454": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2455": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2456": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2457": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2458": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2459": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2461": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2462": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2463": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2465": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2466": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2467": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MUL",
      "path": "0"
    },
    "2468": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2469": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2470": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2471": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2472": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "SUB"
    },
    "2481": {
      "op": "NOT"
    },
    "2482": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "AND",
      "path": "0"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "op": "SUB"
    },
    "2491": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2492": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2493": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "AND",
      "path": "0"
    },
    "2494": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2495": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2496": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2497": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "OR",
      "path": "0"
    },
    "2498": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2499": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2500": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2501": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2502": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2503": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2504": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2505": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2506": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2507": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2508": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2509": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2510": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2511": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2513": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2514": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2515": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2516": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2518": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2519": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2520": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2521": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2523": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2524": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2525": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2526": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2528": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2529": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2530": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2531": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2533": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2534": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2535": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2536": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2537": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2539": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2540": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2541": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "ADD",
      "path": "0"
    },
    "2542": {
      "fn": "StakingRewards.stake",
      "offset": [
        2056,
        2162
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2543": {
      "fn": "StakingRewards.stake",
      "offset": [
        2179,
        2192
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 23
    },
    "2544": {
      "fn": "StakingRewards.stake",
      "offset": [
        2179,
        2192
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2545": {
      "fn": "StakingRewards.stake",
      "offset": [
        2179,
        2192
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "fn": "StakingRewards.stake",
      "jump": "o",
      "offset": [
        1677,
        2216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2550": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2551": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3407,
        3417
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3417
      ],
      "op": "AND",
      "path": "0"
    },
    "2561": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2563": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3394,
        3397
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2564": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2565": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2566": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2567": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "LT",
      "path": "0"
    },
    "2568": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA13"
    },
    "2571": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2572": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA13"
    },
    "2575": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "2578": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3387,
        3398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2579": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2580": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2582": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2583": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2584": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2585": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2587": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2588": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2589": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2590": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2592": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2593": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2594": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "MUL",
      "path": "0"
    },
    "2595": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3398
      ],
      "op": "ADD",
      "path": "0"
    },
    "2596": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3403
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3403
      ],
      "op": "AND",
      "path": "0"
    },
    "2606": {
      "branch": 49,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3387,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "2607": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6C"
    },
    "2610": {
      "branch": 49,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2611": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2613": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2622": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2625": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2627": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2628": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "ADD",
      "path": "0"
    },
    "2629": {
      "op": "MSTORE"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2634": {
      "op": "DUP3"
    },
    "2635": {
      "op": "ADD"
    },
    "2636": {
      "op": "MSTORE"
    },
    "2637": {
      "op": "PUSH15",
      "value": "0x139BDD081E5BDD5C881C995DD85C99"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2658": {
      "op": "DUP3"
    },
    "2659": {
      "op": "ADD"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2667": {
      "op": "JUMP"
    },
    "2668": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3379,
        3437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2669": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3486,
        3501
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 25
    },
    "2670": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2672": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3463,
        3466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2673": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2674": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2675": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2676": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "LT",
      "path": "0"
    },
    "2677": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA80"
    },
    "2680": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2681": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA80"
    },
    "2684": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "2687": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3456,
        3467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2688": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2689": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2690": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2692": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2693": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2695": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2697": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2698": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2699": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2701": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "MUL",
      "path": "0"
    },
    "2702": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3467
      ],
      "op": "ADD",
      "path": "0"
    },
    "2703": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2705": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3478
      ],
      "op": "ADD",
      "path": "0"
    },
    "2706": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3478
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2707": {
      "branch": 50,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3456,
        3502
      ],
      "op": "LT",
      "path": "0"
    },
    "2708": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACB"
    },
    "2711": {
      "branch": 50,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2712": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2714": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2723": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2726": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2728": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2729": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "ADD",
      "path": "0"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH9",
      "value": "0x546F6F206561726C79"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2762": {
      "op": "JUMP"
    },
    "2763": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3448,
        3516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2764": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3557,
        3572
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x3"
    },
    "2766": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3557,
        3572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2767": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2769": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3542,
        3545
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2770": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2771": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2772": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2773": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "LT",
      "path": "0"
    },
    "2774": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "2777": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2778": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "2781": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "2784": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3535,
        3546
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2785": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2786": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2787": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2789": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2790": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2792": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2794": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2795": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2796": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2798": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "MUL",
      "path": "0"
    },
    "2799": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3546
      ],
      "op": "ADD",
      "path": "0"
    },
    "2800": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2802": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3553
      ],
      "op": "ADD",
      "path": "0"
    },
    "2803": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3553
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2804": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3572
      ],
      "op": "GT",
      "path": "0"
    },
    "2805": {
      "branch": 51,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3535,
        3572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2806": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "2809": {
      "branch": 51,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2810": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2812": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2821": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2824": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2826": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2827": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "ADD",
      "path": "0"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2833": {
      "op": "DUP3"
    },
    "2834": {
      "op": "ADD"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682066756E647320746F207061796F7574000000000000"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2880": {
      "op": "JUMP"
    },
    "2881": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3527,
        3604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2882": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3644,
        3645
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x0"
    },
    "2884": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2886": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3630,
        3633
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2887": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2888": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2889": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2890": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "LT",
      "path": "0"
    },
    "2891": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB56"
    },
    "2894": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2895": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB56"
    },
    "2898": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "2901": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3623,
        3634
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2902": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2903": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2904": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2906": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2907": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2909": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2911": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2912": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2913": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2915": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "MUL",
      "path": "0"
    },
    "2916": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3634
      ],
      "op": "ADD",
      "path": "0"
    },
    "2917": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2919": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3641
      ],
      "op": "ADD",
      "path": "0"
    },
    "2920": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3641
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2921": {
      "branch": 52,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3623,
        3645
      ],
      "op": "GT",
      "path": "0"
    },
    "2922": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA9"
    },
    "2925": {
      "branch": 52,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2926": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2928": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2937": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2940": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2942": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2943": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "ADD",
      "path": "0"
    },
    "2944": {
      "op": "MSTORE"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH17",
      "value": "0x139BDD1A1A5B99C81D1BC81C185E5BDD5D"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "2984": {
      "op": "JUMP"
    },
    "2985": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3615,
        3668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2986": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3693
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x5"
    },
    "2988": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3694,
        3697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2989": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2990": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2991": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2992": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "LT",
      "path": "0"
    },
    "2993": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBC"
    },
    "2996": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2997": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBC"
    },
    "3000": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3003": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3687,
        3698
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3004": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3005": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3006": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3008": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3009": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3011": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3013": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3014": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3015": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3017": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "MUL",
      "path": "0"
    },
    "3018": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3698
      ],
      "op": "ADD",
      "path": "0"
    },
    "3019": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3021": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3705
      ],
      "op": "ADD",
      "path": "0"
    },
    "3022": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3705
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3023": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3709,
        3710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3025": {
      "branch": 53,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3687,
        3710
      ],
      "op": "EQ",
      "path": "0"
    },
    "3026": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0B"
    },
    "3029": {
      "branch": 53,
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3030": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3032": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3041": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3044": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3046": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3047": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "ADD",
      "path": "0"
    },
    "3048": {
      "op": "MSTORE"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH11",
      "value": "0x55736520756E7374616B65"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "ADD"
    },
    "3075": {
      "op": "MSTORE"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "3082": {
      "op": "JUMP"
    },
    "3083": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3679,
        3727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3084": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3749,
        3761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3086": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3088": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3770,
        3773
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3089": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3090": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3091": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3092": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "LT",
      "path": "0"
    },
    "3093": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC20"
    },
    "3096": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3097": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC20"
    },
    "3100": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3103": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3763,
        3774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3104": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3105": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3106": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3108": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3109": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3111": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3113": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3114": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3115": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3117": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "MUL",
      "path": "0"
    },
    "3118": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3774
      ],
      "op": "ADD",
      "path": "0"
    },
    "3119": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3121": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3781
      ],
      "op": "ADD",
      "path": "0"
    },
    "3122": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3763,
        3781
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3123": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3749,
        3781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3124": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3749,
        3781
      ],
      "op": "POP",
      "path": "0"
    },
    "3125": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3813,
        3814
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x0"
    },
    "3127": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3129": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3799,
        3802
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3130": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3131": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3132": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3133": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "LT",
      "path": "0"
    },
    "3134": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC49"
    },
    "3137": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3138": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC49"
    },
    "3141": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3144": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3792,
        3803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3145": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3146": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3148": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3149": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3150": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3151": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3153": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3154": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3155": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3157": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3159": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3160": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3161": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3162": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "MUL",
      "path": "0"
    },
    "3163": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3803
      ],
      "op": "ADD",
      "path": "0"
    },
    "3164": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3165": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3810
      ],
      "op": "ADD",
      "path": "0"
    },
    "3166": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3167": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3168": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3169": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3792,
        3814
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3170": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3854
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 30
    },
    "3171": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3173": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3174": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3183": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3184": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3864,
        3874
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3185": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3186": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3187": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ADD",
      "path": "0"
    },
    "3188": {
      "op": "SWAP3"
    },
    "3189": {
      "op": "SWAP1"
    },
    "3190": {
      "op": "SWAP3"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3194": {
      "op": "DUP3"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "DUP4"
    },
    "3197": {
      "op": "SWAP1"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3854
      ],
      "op": "AND",
      "path": "0"
    },
    "3208": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3209": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3863
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3214": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3217": {
      "op": "ADD"
    },
    "3218": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3220": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3222": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3223": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3224": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3225": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "SUB",
      "path": "0"
    },
    "3226": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3227": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3229": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3230": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "GAS",
      "path": "0"
    },
    "3231": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "CALL",
      "path": "0"
    },
    "3232": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3233": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3234": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3235": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "3238": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3239": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3240": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3242": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3243": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3244": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3245": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3247": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3248": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3249": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3250": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3251": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3252": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3253": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3255": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3256": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3257": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3259": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "NOT",
      "path": "0"
    },
    "3260": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3262": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3263": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ADD",
      "path": "0"
    },
    "3264": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "AND",
      "path": "0"
    },
    "3265": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3266": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ADD",
      "path": "0"
    },
    "3267": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3268": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3270": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3271": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3272": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3273": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "ADD",
      "path": "0"
    },
    "3274": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3275": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "3278": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3279": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3280": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1457"
    },
    "3283": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3842,
        3885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3284": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3285": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3842,
        3885
      ],
      "op": "POP",
      "path": "0"
    },
    "3286": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3937,
        3944
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 31
    },
    "3287": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3289": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3291": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3292": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3293": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3294": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE7"
    },
    "3297": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3298": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3299": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "3302": {
      "fn": "StakingRewards.claimReward",
      "jump": "i",
      "offset": [
        3918,
        3944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3303": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3304": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3305": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3306": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        3918,
        3944
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3307": {
      "op": "POP"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "op": "POP"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "fn": "StakingRewards.claimReward",
      "jump": "o",
      "offset": [
        3328,
        4000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3312": {
      "offset": [
        739,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3313": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3315": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3316": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3317": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3318": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3319": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "LT",
      "path": "0"
    },
    "3320": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD00"
    },
    "3323": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3324": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3326": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3327": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3328": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3329": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3331": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3332": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3333": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3334": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3336": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3337": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3338": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3339": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3341": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3342": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3343": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "MUL",
      "path": "0"
    },
    "3344": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "ADD",
      "path": "0"
    },
    "3345": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3346": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3347": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3349": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3350": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "ADD",
      "path": "0"
    },
    "3351": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3352": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3354": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3355": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "ADD",
      "path": "0"
    },
    "3356": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3357": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3359": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3360": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "ADD",
      "path": "0"
    },
    "3361": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3362": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3364": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3365": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3366": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "ADD",
      "path": "0"
    },
    "3367": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3377": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3378": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "AND",
      "path": "0"
    },
    "3379": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3383": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3384": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3385": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        739,
        760
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3386": {
      "fn": "StakingRewards.claimReward",
      "jump": "o",
      "offset": [
        739,
        760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3387": {
      "offset": [
        766,
        789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3388": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3390": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3391": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3392": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3393": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3394": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "LT",
      "path": "0"
    },
    "3395": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4B"
    },
    "3398": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3399": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3401": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3402": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3403": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3404": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3406": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3407": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3408": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3409": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3411": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3412": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3413": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3414": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3416": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3417": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3418": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "MUL",
      "path": "0"
    },
    "3419": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "ADD",
      "path": "0"
    },
    "3420": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3421": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3422": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3424": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3425": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "ADD",
      "path": "0"
    },
    "3426": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3427": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3429": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3430": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3431": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "ADD",
      "path": "0"
    },
    "3432": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3433": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3434": {
      "fn": "StakingRewards.claimReward",
      "offset": [
        766,
        789
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "offset": [
        766,
        789
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3437": {
      "fn": "StakingRewards.claimReward",
      "jump": "o",
      "offset": [
        766,
        789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3438": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4070,
        5844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3439": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4145,
        4146
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x0"
    },
    "3441": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3443": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4131,
        4134
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3444": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3445": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3446": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3447": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "LT",
      "path": "0"
    },
    "3448": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD83"
    },
    "3451": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3452": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD83"
    },
    "3455": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3458": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4124,
        4135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3459": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3460": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3463": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3464": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3466": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3468": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3469": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3470": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3472": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "MUL",
      "path": "0"
    },
    "3473": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4135
      ],
      "op": "ADD",
      "path": "0"
    },
    "3474": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3476": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4142
      ],
      "op": "ADD",
      "path": "0"
    },
    "3477": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3478": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3479": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4146
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3480": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4124,
        4146
      ],
      "op": "POP",
      "path": "0"
    },
    "3481": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4205,
        4213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3483": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4223,
        4235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3484": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4238,
        4249
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x757B12C00"
    },
    "3490": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4223,
        4249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3491": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4223,
        4249
      ],
      "op": "POP",
      "path": "0"
    },
    "3492": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4320
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x5"
    },
    "3494": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4321,
        4324
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3495": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3496": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3497": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3498": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "LT",
      "path": "0"
    },
    "3499": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB6"
    },
    "3502": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3503": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB6"
    },
    "3506": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3509": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4314,
        4325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3510": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3511": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3512": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3514": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3515": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3517": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3519": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3520": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3521": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3523": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "MUL",
      "path": "0"
    },
    "3524": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4325
      ],
      "op": "ADD",
      "path": "0"
    },
    "3525": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3527": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4336
      ],
      "op": "ADD",
      "path": "0"
    },
    "3528": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4314,
        4336
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3529": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4308,
        4336
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3530": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4308,
        4336
      ],
      "op": "POP",
      "path": "0"
    },
    "3531": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4361,
        4367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3533": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3534": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4373,
        4380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3536": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4373,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3537": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4371,
        4387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3538": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4371,
        4387
      ],
      "op": "LT",
      "path": "0"
    },
    "3539": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3540": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1438"
    },
    "3543": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3544": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3546": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4453,
        4456
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3547": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3548": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3549": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3550": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "LT",
      "path": "0"
    },
    "3551": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEA"
    },
    "3554": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3555": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEA"
    },
    "3558": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3561": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4446,
        4457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3562": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3563": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3564": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3566": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3567": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3569": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3571": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3572": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3573": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3575": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "MUL",
      "path": "0"
    },
    "3576": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4457
      ],
      "op": "ADD",
      "path": "0"
    },
    "3577": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3579": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4468
      ],
      "op": "ADD",
      "path": "0"
    },
    "3580": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4446,
        4468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3581": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3583": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4434,
        4435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3584": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3585": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3586": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3587": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "LT",
      "path": "0"
    },
    "3588": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0F"
    },
    "3591": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3592": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0F"
    },
    "3595": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3598": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4426,
        4436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3599": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3600": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3601": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3603": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3604": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3606": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3608": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3609": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3610": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3612": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "MUL",
      "path": "0"
    },
    "3613": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4436
      ],
      "op": "ADD",
      "path": "0"
    },
    "3614": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3616": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4442
      ],
      "op": "ADD",
      "path": "0"
    },
    "3617": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4442
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3618": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4468
      ],
      "op": "GT",
      "path": "0"
    },
    "3619": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4426,
        4468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3620": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3621": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3622": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE53"
    },
    "3625": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3626": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "POP",
      "path": "0"
    },
    "3627": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3629": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4483,
        4484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3630": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3631": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3632": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3633": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "LT",
      "path": "0"
    },
    "3634": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3D"
    },
    "3637": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3638": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3D"
    },
    "3641": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3644": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4475,
        4485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3645": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3646": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3647": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3649": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3650": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3652": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3654": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3655": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3656": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3658": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "MUL",
      "path": "0"
    },
    "3659": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4485
      ],
      "op": "ADD",
      "path": "0"
    },
    "3660": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3662": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4489
      ],
      "op": "ADD",
      "path": "0"
    },
    "3663": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4489
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3664": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4493,
        4494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3666": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4475,
        4494
      ],
      "op": "EQ",
      "path": "0"
    },
    "3667": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4425,
        4495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3668": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3669": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2F"
    },
    "3672": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3673": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4609,
        4616
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 34
    },
    "3674": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3676": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4596,
        4599
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3677": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3678": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3679": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3680": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "LT",
      "path": "0"
    },
    "3681": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6C"
    },
    "3684": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3685": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6C"
    },
    "3688": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3691": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4589,
        4600
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3692": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3693": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3694": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3696": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3697": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3699": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3701": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3702": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3703": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3705": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "MUL",
      "path": "0"
    },
    "3706": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4600
      ],
      "op": "ADD",
      "path": "0"
    },
    "3707": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3709": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4607
      ],
      "op": "ADD",
      "path": "0"
    },
    "3710": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4589,
        4607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3711": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3713": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4577,
        4578
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3714": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3715": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3716": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3717": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "LT",
      "path": "0"
    },
    "3718": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE91"
    },
    "3721": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3722": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE91"
    },
    "3725": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3728": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4569,
        4579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3729": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3730": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3733": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3734": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3736": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3738": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3739": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3740": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3742": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "MUL",
      "path": "0"
    },
    "3743": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3744": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3746": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4586
      ],
      "op": "ADD",
      "path": "0"
    },
    "3747": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4569,
        4586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3748": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3750": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4550,
        4553
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3751": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3752": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3753": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3754": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "LT",
      "path": "0"
    },
    "3755": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB6"
    },
    "3758": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3759": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB6"
    },
    "3762": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3765": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4543,
        4554
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3766": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3767": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3768": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3770": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3771": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3773": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3775": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3776": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3777": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3779": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "MUL",
      "path": "0"
    },
    "3780": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4554
      ],
      "op": "ADD",
      "path": "0"
    },
    "3781": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3783": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4565
      ],
      "op": "ADD",
      "path": "0"
    },
    "3784": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4543,
        4565
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3785": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4540
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3786": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED3"
    },
    "3789": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4565
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3790": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4565
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3791": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "3794": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4537,
        4565
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3795": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4537,
        4565
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3796": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDD"
    },
    "3799": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3800": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3801": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "3804": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4536,
        4586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3805": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3806": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE7"
    },
    "3809": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3810": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3811": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "3814": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4536,
        4607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3815": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4536,
        4607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3816": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4535,
        4616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF1"
    },
    "3819": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4535,
        4616
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3820": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4535,
        4616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3821": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4535,
        4616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FA"
    },
    "3824": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4535,
        4616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3825": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4535,
        4616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3826": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3828": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4521,
        4524
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3829": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3830": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3831": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3832": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "LT",
      "path": "0"
    },
    "3833": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF04"
    },
    "3836": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3837": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF04"
    },
    "3840": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3843": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4514,
        4525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3844": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3845": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3846": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3848": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3849": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3851": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3853": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3854": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3855": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3857": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "MUL",
      "path": "0"
    },
    "3858": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4525
      ],
      "op": "ADD",
      "path": "0"
    },
    "3859": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3861": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4532
      ],
      "op": "ADD",
      "path": "0"
    },
    "3862": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3864": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3865": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3866": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3867": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF24"
    },
    "3870": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3871": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3872": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "3875": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4514,
        4616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3876": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3877": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3878": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3879": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4514,
        4616
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1426"
    },
    "3884": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3887": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4421,
        5825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3888": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3890": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4733,
        4736
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3891": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3892": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3893": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3894": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "LT",
      "path": "0"
    },
    "3895": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF42"
    },
    "3898": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3899": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF42"
    },
    "3902": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3905": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4726,
        4737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3906": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3907": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3908": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3910": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3911": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3913": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3915": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3916": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3917": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3919": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "MUL",
      "path": "0"
    },
    "3920": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4737
      ],
      "op": "ADD",
      "path": "0"
    },
    "3921": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3923": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4748
      ],
      "op": "ADD",
      "path": "0"
    },
    "3924": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4726,
        4748
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3925": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3927": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4714,
        4715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3928": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3930": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3931": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "LT",
      "path": "0"
    },
    "3932": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF67"
    },
    "3935": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3936": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF67"
    },
    "3939": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3942": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4706,
        4716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3943": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3944": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3945": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3947": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3948": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3950": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3952": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3953": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3954": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3956": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "MUL",
      "path": "0"
    },
    "3957": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4716
      ],
      "op": "ADD",
      "path": "0"
    },
    "3958": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3960": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4722
      ],
      "op": "ADD",
      "path": "0"
    },
    "3961": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4722
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3962": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4748
      ],
      "op": "GT",
      "path": "0"
    },
    "3963": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4706,
        4748
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3964": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3965": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3966": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFCF"
    },
    "3969": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3970": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "POP",
      "path": "0"
    },
    "3971": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3973": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4779,
        4782
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3974": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3975": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3976": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3977": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "LT",
      "path": "0"
    },
    "3978": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF95"
    },
    "3981": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3982": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF95"
    },
    "3985": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "3988": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4772,
        4783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3989": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3990": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3991": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3993": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3994": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3996": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3998": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3999": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4000": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4002": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "MUL",
      "path": "0"
    },
    "4003": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4783
      ],
      "op": "ADD",
      "path": "0"
    },
    "4004": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4006": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4794
      ],
      "op": "ADD",
      "path": "0"
    },
    "4007": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4772,
        4794
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4008": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4010": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4762,
        4763
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4011": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4012": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4013": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4014": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "LT",
      "path": "0"
    },
    "4015": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFBA"
    },
    "4018": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4019": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFBA"
    },
    "4022": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4025": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4754,
        4764
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4026": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4027": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4028": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4030": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4031": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4033": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4035": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4036": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4037": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4039": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "MUL",
      "path": "0"
    },
    "4040": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4764
      ],
      "op": "ADD",
      "path": "0"
    },
    "4041": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4043": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4768
      ],
      "op": "ADD",
      "path": "0"
    },
    "4044": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4768
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4045": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4794
      ],
      "op": "LT",
      "path": "0"
    },
    "4046": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4754,
        4794
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4047": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4048": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4049": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4050": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1000"
    },
    "4053": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4054": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "POP",
      "path": "0"
    },
    "4055": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4057": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4808,
        4809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4058": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4059": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4060": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4061": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "LT",
      "path": "0"
    },
    "4062": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE9"
    },
    "4065": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4066": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE9"
    },
    "4069": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4072": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4800,
        4810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4073": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4074": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4075": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4077": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4078": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4080": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4082": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4083": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4084": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4086": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "MUL",
      "path": "0"
    },
    "4087": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4810
      ],
      "op": "ADD",
      "path": "0"
    },
    "4088": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4090": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4814
      ],
      "op": "ADD",
      "path": "0"
    },
    "4091": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4092": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4818,
        4819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4094": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4819
      ],
      "op": "EQ",
      "path": "0"
    },
    "4095": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4800,
        4819
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4096": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4705,
        4820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4097": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4098": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1182"
    },
    "4101": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4102": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4839,
        4854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4104": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4106": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4917,
        4920
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4107": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4108": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4109": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4110": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "LT",
      "path": "0"
    },
    "4111": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101A"
    },
    "4114": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4115": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101A"
    },
    "4118": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4121": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4910,
        4921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4122": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4123": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4124": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4126": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4127": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4129": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4131": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4132": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4133": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4135": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "MUL",
      "path": "0"
    },
    "4136": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4921
      ],
      "op": "ADD",
      "path": "0"
    },
    "4137": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4139": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4932
      ],
      "op": "ADD",
      "path": "0"
    },
    "4140": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4910,
        4932
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4141": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4143": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4900,
        4901
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4144": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4145": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4146": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4147": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "LT",
      "path": "0"
    },
    "4148": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103F"
    },
    "4151": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4152": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103F"
    },
    "4155": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4158": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4892,
        4902
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4159": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4160": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4161": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4163": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4164": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4166": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4168": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4169": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4170": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4172": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "MUL",
      "path": "0"
    },
    "4173": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4902
      ],
      "op": "ADD",
      "path": "0"
    },
    "4174": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4176": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4906
      ],
      "op": "ADD",
      "path": "0"
    },
    "4177": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4906
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4178": {
      "branch": 54,
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4892,
        4932
      ],
      "op": "LT",
      "path": "0"
    },
    "4179": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1082"
    },
    "4182": {
      "branch": 54,
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4183": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4974
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x5"
    },
    "4185": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4975,
        4978
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4186": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4187": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4188": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4189": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "LT",
      "path": "0"
    },
    "4190": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1069"
    },
    "4193": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4194": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1069"
    },
    "4197": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4200": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4968,
        4979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4201": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4202": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4203": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4205": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4206": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4208": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4210": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4211": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4212": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4214": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "MUL",
      "path": "0"
    },
    "4215": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4979
      ],
      "op": "ADD",
      "path": "0"
    },
    "4216": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4218": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4990
      ],
      "op": "ADD",
      "path": "0"
    },
    "4219": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4968,
        4990
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4220": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4955,
        4990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4221": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4955,
        4990
      ],
      "op": "POP",
      "path": "0"
    },
    "4222": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AA"
    },
    "4225": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4226": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4227": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5072
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x6"
    },
    "4229": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5073,
        5074
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4230": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4231": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4232": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4233": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "LT",
      "path": "0"
    },
    "4234": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1095"
    },
    "4237": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4238": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1095"
    },
    "4241": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4244": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5065,
        5075
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4245": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4246": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4247": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4249": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4250": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4252": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4254": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4255": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4256": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4258": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "MUL",
      "path": "0"
    },
    "4259": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5075
      ],
      "op": "ADD",
      "path": "0"
    },
    "4260": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4262": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5079
      ],
      "op": "ADD",
      "path": "0"
    },
    "4263": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5065,
        5079
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4264": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5052,
        5079
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4265": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5052,
        5079
      ],
      "op": "POP",
      "path": "0"
    },
    "4266": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4889,
        5098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4267": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5219,
        5226
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 37
    },
    "4268": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4270": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5206,
        5209
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4271": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4272": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4273": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4274": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "LT",
      "path": "0"
    },
    "4275": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BE"
    },
    "4278": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4279": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BE"
    },
    "4282": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4285": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5199,
        5210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4286": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4287": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4288": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4290": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4291": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4293": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4295": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4296": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4297": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4299": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "MUL",
      "path": "0"
    },
    "4300": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5210
      ],
      "op": "ADD",
      "path": "0"
    },
    "4301": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4303": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5217
      ],
      "op": "ADD",
      "path": "0"
    },
    "4304": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5199,
        5217
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4305": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4307": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5187,
        5188
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4308": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4309": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4310": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4311": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "LT",
      "path": "0"
    },
    "4312": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E3"
    },
    "4315": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4316": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E3"
    },
    "4319": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4322": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5179,
        5189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4323": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4324": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4325": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4327": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4328": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4330": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4332": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4333": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4334": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4336": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "MUL",
      "path": "0"
    },
    "4337": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5189
      ],
      "op": "ADD",
      "path": "0"
    },
    "4338": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4340": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5196
      ],
      "op": "ADD",
      "path": "0"
    },
    "4341": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5179,
        5196
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4342": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4344": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5160,
        5163
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4345": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4346": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4347": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4348": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "LT",
      "path": "0"
    },
    "4349": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "4352": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4353": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "4356": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4359": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5153,
        5164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4360": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4361": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4362": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4364": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4365": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4367": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4369": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4370": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4371": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4373": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "MUL",
      "path": "0"
    },
    "4374": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5164
      ],
      "op": "ADD",
      "path": "0"
    },
    "4375": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4377": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5175
      ],
      "op": "ADD",
      "path": "0"
    },
    "4378": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5153,
        5175
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4379": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5150
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4380": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1125"
    },
    "4383": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5175
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4384": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4385": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "4388": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5140,
        5175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4389": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5140,
        5175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4390": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "4393": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4394": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4395": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "4398": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5139,
        5196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4399": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4400": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1139"
    },
    "4403": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4404": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4405": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "4408": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5139,
        5217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4409": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5139,
        5217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4410": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5138,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1143"
    },
    "4413": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5138,
        5226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4414": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5138,
        5226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4415": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5138,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FA"
    },
    "4418": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5138,
        5226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4419": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5138,
        5226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4420": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4422": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5123,
        5126
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4423": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4424": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4425": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4426": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "LT",
      "path": "0"
    },
    "4427": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1156"
    },
    "4430": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4431": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1156"
    },
    "4434": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4437": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5116,
        5127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4438": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4439": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4440": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4442": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4443": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4445": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4447": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4448": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4449": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4451": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "MUL",
      "path": "0"
    },
    "4452": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5127
      ],
      "op": "ADD",
      "path": "0"
    },
    "4453": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4455": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5134
      ],
      "op": "ADD",
      "path": "0"
    },
    "4456": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4458": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4459": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4460": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4461": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1176"
    },
    "4464": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4465": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4466": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "4469": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5116,
        5226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4470": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4471": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4472": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4473": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5116,
        5226
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4474": {
      "op": "POP"
    },
    "4475": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1426"
    },
    "4478": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4482": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4702,
        5825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4483": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4485": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5325,
        5328
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4486": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4487": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4488": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4489": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "LT",
      "path": "0"
    },
    "4490": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1195"
    },
    "4493": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4494": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1195"
    },
    "4497": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4500": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5318,
        5329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4501": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4502": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4503": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4505": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4506": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4508": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4510": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4511": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4512": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4514": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "MUL",
      "path": "0"
    },
    "4515": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5329
      ],
      "op": "ADD",
      "path": "0"
    },
    "4516": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4518": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5340
      ],
      "op": "ADD",
      "path": "0"
    },
    "4519": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5318,
        5340
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4520": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4522": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5306,
        5307
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4523": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4524": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4525": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4526": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "LT",
      "path": "0"
    },
    "4527": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BA"
    },
    "4530": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4531": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BA"
    },
    "4534": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4537": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5298,
        5308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4538": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4539": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4540": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4542": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4543": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4545": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4547": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4548": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4549": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4551": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "MUL",
      "path": "0"
    },
    "4552": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4553": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4555": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5314
      ],
      "op": "ADD",
      "path": "0"
    },
    "4556": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5314
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4557": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5340
      ],
      "op": "LT",
      "path": "0"
    },
    "4558": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5298,
        5340
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4559": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4560": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4561": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FE"
    },
    "4564": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4565": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "POP",
      "path": "0"
    },
    "4566": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5364,
        5367
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4567": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4569": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5354,
        5355
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4570": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4571": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4572": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4573": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "LT",
      "path": "0"
    },
    "4574": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E9"
    },
    "4577": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4578": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E9"
    },
    "4581": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4584": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5346,
        5356
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4585": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4586": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4587": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4589": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4590": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4592": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4594": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4595": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4596": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4598": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "MUL",
      "path": "0"
    },
    "4599": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5356
      ],
      "op": "ADD",
      "path": "0"
    },
    "4600": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4602": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5360
      ],
      "op": "ADD",
      "path": "0"
    },
    "4603": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5360
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4604": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5367
      ],
      "op": "GT",
      "path": "0"
    },
    "4605": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5346,
        5367
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4606": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4607": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4608": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4609": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122F"
    },
    "4612": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4613": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "POP",
      "path": "0"
    },
    "4614": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4616": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5381,
        5382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4617": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4618": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4619": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4620": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "LT",
      "path": "0"
    },
    "4621": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1218"
    },
    "4624": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4625": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1218"
    },
    "4628": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4631": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5373,
        5383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4632": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4633": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4634": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4636": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4637": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4639": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4641": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4642": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4643": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4645": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "MUL",
      "path": "0"
    },
    "4646": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5383
      ],
      "op": "ADD",
      "path": "0"
    },
    "4647": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4649": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5387
      ],
      "op": "ADD",
      "path": "0"
    },
    "4650": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4651": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5391,
        5392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4653": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5392
      ],
      "op": "EQ",
      "path": "0"
    },
    "4654": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5373,
        5392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4655": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5297,
        5393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4656": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5293,
        5825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4657": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5293,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D3"
    },
    "4660": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5293,
        5825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4661": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5515,
        5522
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 38
    },
    "4662": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4664": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5502,
        5505
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4665": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4666": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4667": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4668": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "LT",
      "path": "0"
    },
    "4669": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1248"
    },
    "4672": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4673": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1248"
    },
    "4676": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4679": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5495,
        5506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4680": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4681": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4682": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4684": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4685": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4687": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4689": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4690": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4691": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4693": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "MUL",
      "path": "0"
    },
    "4694": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5506
      ],
      "op": "ADD",
      "path": "0"
    },
    "4695": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4697": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5513
      ],
      "op": "ADD",
      "path": "0"
    },
    "4698": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5495,
        5513
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4699": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4701": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5483,
        5484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4702": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4703": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4704": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4705": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "LT",
      "path": "0"
    },
    "4706": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126D"
    },
    "4709": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4710": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126D"
    },
    "4713": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4716": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5475,
        5485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4717": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4718": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4719": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4721": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4722": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4724": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4726": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4727": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4728": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4730": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "MUL",
      "path": "0"
    },
    "4731": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5485
      ],
      "op": "ADD",
      "path": "0"
    },
    "4732": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4734": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5492
      ],
      "op": "ADD",
      "path": "0"
    },
    "4735": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5475,
        5492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4736": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4738": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5463,
        5464
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4739": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4740": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4741": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4742": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "LT",
      "path": "0"
    },
    "4743": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1292"
    },
    "4746": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4747": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1292"
    },
    "4750": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4753": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5455,
        5465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4754": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4755": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4756": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4758": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4759": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4761": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4763": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4764": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4765": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4767": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "MUL",
      "path": "0"
    },
    "4768": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5465
      ],
      "op": "ADD",
      "path": "0"
    },
    "4769": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4771": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5471
      ],
      "op": "ADD",
      "path": "0"
    },
    "4772": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5455,
        5471
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4773": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4775": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5446,
        5447
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4776": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4777": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4778": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4779": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "LT",
      "path": "0"
    },
    "4780": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B7"
    },
    "4783": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4784": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B7"
    },
    "4787": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4790": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5438,
        5448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4791": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4792": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4793": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4795": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4796": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4798": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4800": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4801": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4802": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4804": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "MUL",
      "path": "0"
    },
    "4805": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5448
      ],
      "op": "ADD",
      "path": "0"
    },
    "4806": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4808": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5452
      ],
      "op": "ADD",
      "path": "0"
    },
    "4809": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5452
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4810": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED3"
    },
    "4813": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4814": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4815": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5438,
        5471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "4818": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5438,
        5471
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4819": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5293,
        5825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4820": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5610,
        5613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4821": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4823": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5598,
        5599
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4824": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4825": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4826": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4827": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "LT",
      "path": "0"
    },
    "4828": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E7"
    },
    "4831": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4832": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E7"
    },
    "4835": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4838": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5590,
        5600
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4839": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4840": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4841": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4843": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4844": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4846": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4848": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4849": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4850": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4852": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "MUL",
      "path": "0"
    },
    "4853": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5600
      ],
      "op": "ADD",
      "path": "0"
    },
    "4854": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4856": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5606
      ],
      "op": "ADD",
      "path": "0"
    },
    "4857": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5606
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4858": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5613
      ],
      "op": "GT",
      "path": "0"
    },
    "4859": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5590,
        5613
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4860": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4861": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4862": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134F"
    },
    "4865": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4866": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "POP",
      "path": "0"
    },
    "4867": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4869": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5646,
        5649
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4870": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4871": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4872": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4873": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "LT",
      "path": "0"
    },
    "4874": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1315"
    },
    "4877": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4878": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1315"
    },
    "4881": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4884": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5639,
        5650
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4885": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4886": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4887": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4889": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4890": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4892": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4894": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4895": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4896": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4898": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "MUL",
      "path": "0"
    },
    "4899": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5650
      ],
      "op": "ADD",
      "path": "0"
    },
    "4900": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4902": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5661
      ],
      "op": "ADD",
      "path": "0"
    },
    "4903": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5639,
        5661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4904": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4906": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5627,
        5628
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4907": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4908": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4909": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4910": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "LT",
      "path": "0"
    },
    "4911": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133A"
    },
    "4914": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4915": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133A"
    },
    "4918": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4921": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5619,
        5629
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4922": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4923": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4924": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4926": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4927": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4929": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4931": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4932": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4933": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4935": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "MUL",
      "path": "0"
    },
    "4936": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5629
      ],
      "op": "ADD",
      "path": "0"
    },
    "4937": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4939": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5635
      ],
      "op": "ADD",
      "path": "0"
    },
    "4940": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5635
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4941": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5661
      ],
      "op": "LT",
      "path": "0"
    },
    "4942": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5619,
        5661
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4943": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5589,
        5662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4944": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5585,
        5825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4945": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5585,
        5825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1426"
    },
    "4948": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5585,
        5825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4949": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5771,
        5778
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 39
    },
    "4950": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4952": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5758,
        5761
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4953": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4954": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4955": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4956": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "LT",
      "path": "0"
    },
    "4957": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1368"
    },
    "4960": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4961": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1368"
    },
    "4964": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "4967": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5751,
        5762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4968": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4969": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4970": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4972": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4973": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4975": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4977": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4978": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4979": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4981": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "MUL",
      "path": "0"
    },
    "4982": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5762
      ],
      "op": "ADD",
      "path": "0"
    },
    "4983": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4985": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5769
      ],
      "op": "ADD",
      "path": "0"
    },
    "4986": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5751,
        5769
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4987": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4989": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5739,
        5740
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4990": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4991": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4992": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4993": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "LT",
      "path": "0"
    },
    "4994": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138D"
    },
    "4997": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4998": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138D"
    },
    "5001": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "5004": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5731,
        5741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5005": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5006": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5007": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5009": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5010": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5012": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5014": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5015": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5016": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5018": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "MUL",
      "path": "0"
    },
    "5019": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5741
      ],
      "op": "ADD",
      "path": "0"
    },
    "5020": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5022": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5748
      ],
      "op": "ADD",
      "path": "0"
    },
    "5023": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5731,
        5748
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5024": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5026": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5719,
        5720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5027": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5028": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5029": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5030": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "LT",
      "path": "0"
    },
    "5031": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B2"
    },
    "5034": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5035": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B2"
    },
    "5038": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "5041": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5711,
        5721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5042": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5043": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5044": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5046": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5047": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5049": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5051": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5052": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5053": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5055": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "MUL",
      "path": "0"
    },
    "5056": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5721
      ],
      "op": "ADD",
      "path": "0"
    },
    "5057": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5059": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5727
      ],
      "op": "ADD",
      "path": "0"
    },
    "5060": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5711,
        5727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5061": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5708
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5062": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CF"
    },
    "5065": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5066": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5067": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C4"
    },
    "5070": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5705,
        5727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5071": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5705,
        5727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5072": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D9"
    },
    "5075": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5076": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5077": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "5080": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5704,
        5748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5081": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5082": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E3"
    },
    "5085": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5769
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5086": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5087": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DB"
    },
    "5090": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5704,
        5769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5091": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5704,
        5769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5092": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5703,
        5778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13ED"
    },
    "5095": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5703,
        5778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5096": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5703,
        5778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5097": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5703,
        5778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FA"
    },
    "5100": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5703,
        5778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5101": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5703,
        5778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5102": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5104": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5688,
        5691
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5105": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5106": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5107": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5108": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "LT",
      "path": "0"
    },
    "5109": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1400"
    },
    "5112": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5113": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1400"
    },
    "5116": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "5119": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5681,
        5692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5120": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5121": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5122": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5124": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5125": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5127": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5129": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5130": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5131": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5133": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "MUL",
      "path": "0"
    },
    "5134": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5692
      ],
      "op": "ADD",
      "path": "0"
    },
    "5135": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5137": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5699
      ],
      "op": "ADD",
      "path": "0"
    },
    "5138": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5140": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5141": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5142": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5143": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1420"
    },
    "5146": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5147": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5148": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1496"
    },
    "5151": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        5681,
        5778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5152": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5153": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5154": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5155": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5681,
        5778
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        5585,
        5825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5159": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 40
    },
    "5160": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1430"
    },
    "5163": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5164": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151C"
    },
    "5167": {
      "fn": "StakingRewards.calculateReward",
      "jump": "i",
      "offset": [
        4389,
        4392
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5168": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5169": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5170": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "POP",
      "path": "0"
    },
    "5171": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4389,
        4392
      ],
      "op": "POP",
      "path": "0"
    },
    "5172": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCD"
    },
    "5175": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5176": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5177": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4356,
        5836
      ],
      "op": "POP",
      "path": "0"
    },
    "5178": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4114,
        5844
      ],
      "op": "POP",
      "path": "0"
    },
    "5179": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4114,
        5844
      ],
      "op": "POP",
      "path": "0"
    },
    "5180": {
      "fn": "StakingRewards.calculateReward",
      "offset": [
        4070,
        5844
      ],
      "op": "POP",
      "path": "0"
    },
    "5181": {
      "fn": "StakingRewards.calculateReward",
      "jump": "o",
      "offset": [
        4070,
        5844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5182": {
      "op": "JUMPDEST"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5187": {
      "op": "DUP3"
    },
    "5188": {
      "op": "DUP5"
    },
    "5189": {
      "op": "SUB"
    },
    "5190": {
      "op": "SLT"
    },
    "5191": {
      "op": "ISZERO"
    },
    "5192": {
      "op": "PUSH2",
      "value": "0x1450"
    },
    "5195": {
      "op": "JUMPI"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5198": {
      "op": "DUP1"
    },
    "5199": {
      "op": "REVERT"
    },
    "5200": {
      "op": "JUMPDEST"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "CALLDATALOAD"
    },
    "5203": {
      "op": "SWAP2"
    },
    "5204": {
      "op": "SWAP1"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "jump": "o",
      "op": "JUMP"
    },
    "5207": {
      "op": "JUMPDEST"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "DUP5"
    },
    "5214": {
      "op": "SUB"
    },
    "5215": {
      "op": "SLT"
    },
    "5216": {
      "op": "ISZERO"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x1469"
    },
    "5220": {
      "op": "JUMPI"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5223": {
      "op": "DUP1"
    },
    "5224": {
      "op": "REVERT"
    },
    "5225": {
      "op": "JUMPDEST"
    },
    "5226": {
      "op": "DUP2"
    },
    "5227": {
      "op": "MLOAD"
    },
    "5228": {
      "op": "DUP1"
    },
    "5229": {
      "op": "ISZERO"
    },
    "5230": {
      "op": "ISZERO"
    },
    "5231": {
      "op": "DUP2"
    },
    "5232": {
      "op": "EQ"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1479"
    },
    "5236": {
      "op": "JUMPI"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "REVERT"
    },
    "5241": {
      "op": "JUMPDEST"
    },
    "5242": {
      "op": "SWAP4"
    },
    "5243": {
      "op": "SWAP3"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "jump": "o",
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5259": {
      "op": "MSTORE"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5264": {
      "op": "MSTORE"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5269": {
      "op": "REVERT"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "NOT"
    },
    "5275": {
      "op": "DUP3"
    },
    "5276": {
      "op": "GT"
    },
    "5277": {
      "op": "ISZERO"
    },
    "5278": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5281": {
      "op": "JUMPI"
    },
    "5282": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5285": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5288": {
      "jump": "i",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "POP"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "SWAP1"
    },
    "5293": {
      "jump": "o",
      "op": "JUMP"
    },
    "5294": {
      "op": "JUMPDEST"
    },
    "5295": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5302": {
      "op": "SHL"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5315": {
      "op": "REVERT"
    },
    "5316": {
      "op": "JUMPDEST"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5319": {
      "op": "DUP3"
    },
    "5320": {
      "op": "DUP3"
    },
    "5321": {
      "op": "LT"
    },
    "5322": {
      "op": "ISZERO"
    },
    "5323": {
      "op": "PUSH2",
      "value": "0x14D6"
    },
    "5326": {
      "op": "JUMPI"
    },
    "5327": {
      "op": "PUSH2",
      "value": "0x14D6"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5333": {
      "jump": "i",
      "op": "JUMP"
    },
    "5334": {
      "op": "JUMPDEST"
    },
    "5335": {
      "op": "POP"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "op": "SWAP1"
    },
    "5338": {
      "jump": "o",
      "op": "JUMP"
    },
    "5339": {
      "op": "JUMPDEST"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "DUP2"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5345": {
      "op": "NOT"
    },
    "5346": {
      "op": "DIV"
    },
    "5347": {
      "op": "DUP4"
    },
    "5348": {
      "op": "GT"
    },
    "5349": {
      "op": "DUP3"
    },
    "5350": {
      "op": "ISZERO"
    },
    "5351": {
      "op": "ISZERO"
    },
    "5352": {
      "op": "AND"
    },
    "5353": {
      "op": "ISZERO"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5357": {
      "op": "JUMPI"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5361": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5364": {
      "jump": "i",
      "op": "JUMP"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "op": "MUL"
    },
    "5368": {
      "op": "SWAP1"
    },
    "5369": {
      "jump": "o",
      "op": "JUMP"
    },
    "5370": {
      "op": "JUMPDEST"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5373": {
      "op": "DUP3"
    },
    "5374": {
      "op": "PUSH2",
      "value": "0x1517"
    },
    "5377": {
      "op": "JUMPI"
    },
    "5378": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5388": {
      "op": "MSTORE"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5393": {
      "op": "MSTORE"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5398": {
      "op": "REVERT"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "DIV"
    },
    "5402": {
      "op": "SWAP1"
    },
    "5403": {
      "jump": "o",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5409": {
      "op": "DUP3"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "5414": {
      "op": "JUMPI"
    },
    "5415": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5421": {
      "jump": "i",
      "op": "JUMP"
    },
    "5422": {
      "op": "JUMPDEST"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5426": {
      "op": "ADD"
    },
    "5427": {
      "op": "SWAP1"
    },
    "5428": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86950b0cb498a93af6dbcb31120720657335d5f4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8;\n\n\n\ncontract StakingRewards {\n    ERC20 public stakingToken;\n\n\n    uint public _poolSize; //all stakes together\n    uint public _lockingPeriod; // time period in which each individual stake is locked in the contract\n    uint public contractBalance; // balance of the contract from which the rewards are payed\n    \n    address private owner;\n\n    struct Stake {\n        address user;\n        uint amount;\n        uint sinceBlock; // start of staking\n        uint untilBlock; // end of staking\n        uint reward;\n         }\n\n    struct Reward{\n        uint reward; // reward in promille\n        uint start; // start of reward period\n        uint end; // end of reward period\n    }\n\n    Stake[] public stakes;\n    Reward[] public rewards;\n   \n\n    constructor(address _stakingToken, uint lockingPeriod) {\n        stakingToken = ERC20(_stakingToken);\n        owner = msg.sender;\n        _lockingPeriod = lockingPeriod;\n        rewards.push(Reward(uint(100), uint(block.timestamp), uint(0))); //set first reward rate as 100\n    }\n\n    modifier _ownerOnly(){\n      require(msg.sender == owner);\n      _;\n    }\n\n    //function to deposit funds to the contract. Funds are used to pay the staking rewards\n    function ownerDeposit(uint _amount) external _ownerOnly{\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\n        contractBalance += _amount;\n    }\n\n    //function to withdraw from the Contract\n    function ownerWithdraw(uint _amount) external _ownerOnly{\n        stakingToken.transfer(msg.sender, _amount);\n        contractBalance -= _amount;\n    }\n\n    //function to create an individual stake\n    function stake(uint _amount) external returns(uint) {\n        require(_amount > 0, 'Nothing to stake'); //check that you stake something\n\n        bool isTransfered = stakingToken.transferFrom(msg.sender, address(this), _amount);\n\n        require(isTransfered == true, \"Error while transfer\"); // breaks if an error occoured during transfer\n\n        _poolSize += _amount;\n        stakes.push(Stake(msg.sender, _amount, uint(block.timestamp), uint(block.timestamp + _lockingPeriod ), 0));\n        return stakes.length;\n                \n    }\n\n    //function to withdraw your funds\n    function unstake (uint _id) external  {\n        require(stakes[_id].user == msg.sender, 'Not your stake'); //check if its your stake\n        require(stakes[_id].untilBlock < uint(block.timestamp), 'Too early'); //check if locking period is over\n        require(stakes[_id].amount > 0, 'Nothing to unstake');\n        \n        calculateReward(_id); // Calculate Reward of the Stake\n        uint _amount;\n\n        if(contractBalance < stakes[_id].reward){ // if there is not enough balance to pay the reward, just pay the stake back. Prevent locked funds.\n            _amount = stakes[_id].amount;\n        }\n\n        else{\n            _amount = stakes[_id].amount + stakes[_id].reward; //add reward to the payout amount\n            contractBalance -= stakes[_id].reward; // reduce the contractBalance by the amount of the Reward\n            stakes[_id].reward =0; // empty the reward\n\n        }\n\n        _poolSize-= stakes[_id].amount; \n        stakes[_id].amount= 0;\n        stakingToken.transfer(msg.sender, _amount); //transfer the payout\n        \n        \n    }\n\n    function claimReward(uint _id) external {\n         require(stakes[_id].user == msg.sender, 'Not your reward');\n         require(stakes[_id].untilBlock < uint(block.timestamp), 'Too early');\n         require(stakes[_id].reward <= contractBalance, 'Not enough funds to payout' );\n         require(stakes[_id].reward > 0, 'Nothing to payout' );\n         require(stakes[_id].amount == 0, 'Use unstake' );\n\n         \n         uint _amount= stakes[_id].reward;\n         stakes[_id].reward = 0; //empty rewards.\n         stakingToken.transfer(msg.sender, _amount ); //transfer the payout\n         contractBalance -= _amount; // reduce the contract balance \n         \n      \n    }\n\n    //function to calculate the reward of each individual stake\n    function calculateReward(uint _id) internal {\n        stakes[_id].reward = 0; //set reward to 0 to prevent adding it everytime\n        uint end;\n        uint divisor = 31536000000; // 24*60*60(Days) * 365(year) * 1000 (promille)\n\n        end = stakes[_id].untilBlock;\n        \n         for (uint i=0; i<rewards.length; i++){\n             \n            if ((rewards[i].start <= stakes[_id].sinceBlock)  && (rewards[i].end == 0)){\n                stakes[_id].reward +=((end - stakes[_id].sinceBlock) * rewards[i].reward * stakes[_id].amount)/divisor; // if staking starts and ends without reward change\n            }\n\n            else if((rewards[i].start <= stakes[_id].sinceBlock) && (rewards[i].end >= stakes[_id].sinceBlock) && (rewards[i].end != 0)){\n                uint endOfBlock;\n                \n                if(rewards[i].end >= stakes[_id].untilBlock){\n                    endOfBlock = stakes[_id].untilBlock;\n                }\n                else{\n                    endOfBlock = rewards[i].end;\n                }\n\n                stakes[_id].reward += ((endOfBlock - stakes[_id].sinceBlock) * rewards[i].reward * stakes[_id].amount)/divisor; //first reward rate of the stake\n            }\n\n            else if ((rewards[i].start >= stakes[_id].sinceBlock) && (rewards[i].end <= end) && (rewards[i].end != 0)  ){\n                stakes[_id].reward += ((rewards[i].end - rewards[i].start) * rewards[i].reward * stakes[_id].amount)/divisor; //reward rate during staking\n            }\n\n            else if ((rewards[i].start <= end) && (rewards[i].start >= stakes[_id].sinceBlock)){\n                stakes[_id].reward += ((end - rewards[i].start) * rewards[i].reward * stakes[_id].amount)/divisor; //last reward rate of the stake\n            }\n\n        }\n\n\n    }\n\n    //function to set reward rate for current timeperiod\n    function setRewardRate(uint rate) public _ownerOnly {    \n        rewards.push(Reward(rate, uint(block.timestamp), uint(0))); // last reward rate has 0 as end as identifier. \n        if(rewards.length>1){\n            rewards[rewards.length -2].end = uint(block.timestamp); //set end of the previous reward rate to actual time\n        }\n        \n    }  \n\n    //function to check how long your funds are stil locked\n    function untilLockingEnd(uint _id) public view returns(uint) {\n        if(stakes[_id].untilBlock < block.timestamp){\n            return 0;\n        }\n        else{\n            return stakes[_id].untilBlock - uint(block.timestamp);\n\n        }\n    }\n\n}\n\ninterface ERC20 {\n\n    function balanceOf(address account) external view returns (uint);\n\n    function transfer(address recipient, uint amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed owner, address indexed spender, uint value);\n}",
  "sourceMap": "57:6517:0:-:0;;;800:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;865:12;:35;;-1:-1:-1;;;;;865:35:0;;;-1:-1:-1;;;;;;865:35:0;;;;;;910:5;:18;;;;;918:10;910:18;;;;938:14;:30;991:49;;;;;;;;1003:3;991:49;;1014:15;991:49;;;;;;;;;;;;978:7;:63;;865:35;978:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57:6517;;14:351:1;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:1;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:1:o;:::-;57:6517:0;;;;;;",
  "sourcePath": "contracts/stakingRewards.sol",
  "type": "contract"
}